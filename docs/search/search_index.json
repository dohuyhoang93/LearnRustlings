{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome","text":""},{"location":"#welcome-to-learnrustlings-documentation","title":"Welcome to LearnRustlings Documentation!","text":"<p>This documentation serves as a comprehensive guide and personal knowledge base for my journey through the Rustlings exercises. Here, you'll find my solutions, explanations, and key takeaways for each exercise, organized for easy navigation and reference.</p>"},{"location":"#what-is-rustlings","title":"What is Rustlings?","text":"<p>Rustlings is a fantastic command-line tool designed to help you learn the Rust programming language by solving small, bite-sized exercises. Each exercise focuses on a specific Rust concept, gradually building your understanding from the basics to more advanced topics. It's an interactive and hands-on way to solidify your Rust knowledge.</p>"},{"location":"#why-this-documentation","title":"Why This Documentation?","text":"<p>As I progress through Rustlings, I've created this documentation for several reasons:</p> <ul> <li>Personal Learning: To reinforce my understanding of Rust concepts by articulating solutions and explanations in my own words.</li> <li>Knowledge Base: To build a searchable and organized repository of solutions and common Rust patterns.</li> <li>Future Reference: To quickly recall how specific Rust features work or how certain problems were solved.</li> <li>Sharing: To potentially help other learners by providing alternative perspectives or detailed breakdowns of the exercises.</li> </ul>"},{"location":"#repository-structure","title":"Repository Structure","text":"<p>This MkDocs documentation is built from the content within the <code>https://github.com/dohuyhoang93/LearnRustlings</code> repository. The exercise solutions and explanations are structured to mirror the Rustlings exercise categories for logical flow.</p> <p>You can navigate through the exercises using the sidebar. Each section corresponds to a Rustlings module (e.g., <code>variables</code>, <code>functions</code>, <code>collections</code>, <code>smart_pointers</code>, etc.).</p>"},{"location":"#getting-started","title":"Getting Started","text":"<p>To explore the exercises and their explanations:</p> <ol> <li>Navigate the Sidebar: Use the navigation menu on the left to browse through different Rustlings categories and individual exercises.</li> <li>Search: Use the search bar to quickly find specific topics or exercise names.</li> </ol>"},{"location":"#contributions","title":"Contributions","text":"<p>This is primarily a personal learning project. However, if you find any errors or have suggestions for clearer explanations, feel free to open an issue or a pull request on the GitHub repository.</p> <p>Thank you for visiting! Happy Rusting!</p>"},{"location":"Documents/19_smart_pointers/cow1/","title":"Cow (Clone-on-Write) trong Rust","text":""},{"location":"Documents/19_smart_pointers/cow1/#bai-giang-chi-tiet-cowa-t-trong-rust-su-linh-hoat-giua-so-huu-va-vay-muon","title":"B\u00c0I GI\u1ea2NG CHI TI\u1ebeT: <code>Cow&lt;'a, T&gt;</code> TRONG RUST - S\u1ef0 LINH HO\u1ea0T GI\u1eeeA S\u1ede H\u1eeeU V\u00c0 VAY M\u01af\u1ee2N","text":""},{"location":"Documents/19_smart_pointers/cow1/#muc-luc","title":"M\u1ee5c L\u1ee5c","text":"<ol> <li>V\u1ea5n \u0110\u1ec1 C\u1ed1t L\u00f5i: T\u1ea1i sao <code>Cow</code> l\u1ea1i t\u1ed3n t\u1ea1i?</li> <li><code>Cow</code> l\u00e0 g\u00ec? Gi\u1edbi thi\u1ec7u v\u00e0 \u0111\u1ecbnh ngh\u0129a.</li> <li>Diagram Tr\u1ef1c Quan: C\u1ea5u tr\u00fac c\u1ee7a <code>Cow</code>.</li> <li>V\u00ed D\u1ee5 Kinh \u0110i\u1ec3n: Khi n\u00e0o m\u1ed9t h\u00e0m c\u1ea7n <code>Cow</code>?</li> <li>C\u01a1 Ch\u1ebf \"Clone-on-Write\" Ho\u1ea1t \u0110\u1ed9ng: Ph\u00e2n t\u00edch <code>to_mut()</code> v\u1edbi Diagram.</li> <li>Code Ho\u00e0n Ch\u1ec9nh: Ch\u1ea1y v\u00e0 th\u1eed nghi\u1ec7m.</li> <li>L\u1ee3i \u00cdch v\u00e0 H\u1ea1n Ch\u1ebf.</li> <li>T\u1ed5ng K\u1ebft.</li> </ol>"},{"location":"Documents/19_smart_pointers/cow1/#1-van-e-cot-loi-tai-sao-cow-lai-ton-tai","title":"1. V\u1ea5n \u0110\u1ec1 C\u1ed1t L\u00f5i: T\u1ea1i sao <code>Cow</code> l\u1ea1i t\u1ed3n t\u1ea1i?","text":"<p>Trong Rust, ch\u00fang ta th\u01b0\u1eddng xuy\u00ean \u0111\u1ed1i m\u1eb7t v\u1edbi l\u1ef1a ch\u1ecdn gi\u1eefa:</p> <ul> <li>D\u1eef li\u1ec7u s\u1edf h\u1eefu (Owned Data): V\u00ed d\u1ee5 nh\u01b0 <code>String</code> ho\u1eb7c <code>Vec&lt;T&gt;</code>. Ch\u00fang c\u00f3 to\u00e0n quy\u1ec1n ki\u1ec3m so\u00e1t d\u1eef li\u1ec7u, c\u00f3 th\u1ec3 thay \u0111\u1ed5i n\u00f3, v\u00e0 ch\u1ecbu tr\u00e1ch nhi\u1ec7m gi\u1ea3i ph\u00f3ng b\u1ed9 nh\u1edb. Vi\u1ec7c t\u1ea1o ra ch\u00fang (v\u00ed d\u1ee5, clone m\u1ed9t <code>&amp;str</code> th\u00e0nh <code>String</code>) t\u1ed1n chi ph\u00ed v\u00ec ph\u1ea3i c\u1ea5p ph\u00e1t b\u1ed9 nh\u1edb m\u1edbi tr\u00ean heap.</li> <li>D\u1eef li\u1ec7u vay m\u01b0\u1ee3n (Borrowed Data): V\u00ed d\u1ee5 nh\u01b0 <code>&amp;str</code> ho\u1eb7c <code>&amp;[T]</code>. Ch\u00fang ch\u1ec9 l\u00e0 m\u1ed9t tham chi\u1ebfu (m\u1ed9t \"con tr\u1ecf\") \u0111\u1ebfn d\u1eef li\u1ec7u thu\u1ed9c s\u1edf h\u1eefu c\u1ee7a ng\u01b0\u1eddi kh\u00e1c. Ch\u00fang r\u1ea5t nh\u1eb9 v\u00e0 nhanh, nh\u01b0ng ch\u00fang kh\u00f4ng th\u1ec3 thay \u0111\u1ed5i d\u1eef li\u1ec7u (tr\u1eeb khi l\u00e0 <code>&amp;mut</code>) v\u00e0 b\u1ecb gi\u1edbi h\u1ea1n b\u1edfi lifetime.</li> </ul> <p>T\u00ecnh hu\u1ed1ng: H\u00e3y t\u01b0\u1edfng t\u01b0\u1ee3ng b\u1ea1n vi\u1ebft m\u1ed9t h\u00e0m nh\u1eadn v\u00e0o m\u1ed9t chu\u1ed7i.</p> <ul> <li>N\u1ebfu chu\u1ed7i \u0111\u00f3 \u0111\u00e3 h\u1ee3p l\u1ec7, b\u1ea1n ch\u1ec9 c\u1ea7n \u0111\u1ecdc n\u00f3. D\u00f9ng <code>&amp;str</code> l\u00e0 hi\u1ec7u qu\u1ea3 nh\u1ea5t, kh\u00f4ng c\u1ea7n c\u1ea5p ph\u00e1t b\u1ed9 nh\u1edb.</li> <li>N\u1ebfu chu\u1ed7i \u0111\u00f3 kh\u00f4ng h\u1ee3p l\u1ec7 v\u00e0 c\u1ea7n s\u1eeda \u0111\u1ed5i (v\u00ed d\u1ee5: lo\u1ea1i b\u1ecf kho\u1ea3ng tr\u1eafng th\u1eeba, chuy\u1ec3n th\u00e0nh ch\u1eef hoa), b\u1ea1n c\u1ea7n m\u1ed9t b\u1ea3n sao c\u00f3 th\u1ec3 thay \u0111\u1ed5i. T\u1ee9c l\u00e0 b\u1ea1n c\u1ea7n t\u1ea1o ra m\u1ed9t <code>String</code>.</li> </ul> <p>L\u00e0m th\u1ebf n\u00e0o \u0111\u1ec3 vi\u1ebft m\u1ed9t h\u00e0m duy nh\u1ea5t c\u00f3 th\u1ec3 x\u1eed l\u00fd c\u1ea3 hai tr\u01b0\u1eddng h\u1ee3p n\u00e0y m\u1ed9t c\u00e1ch hi\u1ec7u qu\u1ea3 nh\u1ea5t?</p> <ul> <li>C\u00e1ch 1: Lu\u00f4n nh\u1eadn <code>&amp;str</code> v\u00e0 tr\u1ea3 v\u1ec1 m\u1ed9t <code>String</code> m\u1edbi.<ul> <li>Nh\u01b0\u1ee3c \u0111i\u1ec3m: Ngay c\u1ea3 khi kh\u00f4ng c\u1ea7n thay \u0111\u1ed5i, b\u1ea1n v\u1eabn ph\u1ea3i c\u1ea5p ph\u00e1t b\u1ed9 nh\u1edb v\u00e0 t\u1ea1o <code>String</code> m\u1edbi. L\u00e3ng ph\u00ed!</li> </ul> </li> <li>C\u00e1ch 2: Nh\u1eadn m\u1ed9t <code>&amp;mut String</code>.<ul> <li>Nh\u01b0\u1ee3c \u0111i\u1ec3m: B\u1eaft bu\u1ed9c ng\u01b0\u1eddi g\u1ecdi ph\u1ea3i c\u00f3 m\u1ed9t <code>String</code> s\u1edf h\u1eefu v\u00e0 c\u00f3 th\u1ec3 thay \u0111\u1ed5i. Kh\u00f4ng th\u1ec3 truy\u1ec1n v\u00e0o m\u1ed9t chu\u1ed7i h\u1eb1ng nh\u01b0 <code>\"hello world\"</code>. K\u00e9m linh ho\u1ea1t.</li> </ul> </li> </ul> <p>\u0110\u00e2y ch\u00ednh l\u00e0 l\u00fac <code>Cow</code> t\u1ecfa s\u00e1ng.</p>"},{"location":"Documents/19_smart_pointers/cow1/#2-cow-la-gi-gioi-thieu-va-inh-nghia","title":"2. <code>Cow</code> l\u00e0 g\u00ec? Gi\u1edbi thi\u1ec7u v\u00e0 \u0110\u1ecbnh ngh\u0129a","text":"<p><code>Cow</code> l\u00e0 vi\u1ebft t\u1eaft c\u1ee7a \"Clone-on-Write\" (Sao ch\u00e9p khi c\u1ea7n ghi/s\u1eeda \u0111\u1ed5i).</p> <p>N\u00f3 l\u00e0 m\u1ed9t ki\u1ec3u <code>enum</code> th\u00f4ng minh (smart pointer) c\u00f3 th\u1ec3 ch\u1ee9a m\u1ed9t trong hai bi\u1ebfn th\u1ec3:</p> <ul> <li><code>Borrowed(&amp;'a T)</code>: M\u1ed9t tham chi\u1ebfu vay m\u01b0\u1ee3n. R\u1ebb, nhanh, kh\u00f4ng s\u1edf h\u1eefu.</li> <li><code>Owned(T)</code>: M\u1ed9t d\u1eef li\u1ec7u s\u1edf h\u1eefu. T\u1ed1n chi ph\u00ed h\u01a1n \u0111\u1ec3 t\u1ea1o, nh\u01b0ng c\u00f3 th\u1ec3 thay \u0111\u1ed5i.</li> </ul> <p>V\u1ec1 c\u01a1 b\u1ea3n, <code>Cow</code> cho ph\u00e9p m\u1ed9t gi\u00e1 tr\u1ecb c\u00f3 th\u1ec3 l\u00e0 vay m\u01b0\u1ee3n ho\u1eb7c s\u1edf h\u1eefu. N\u00f3 tr\u00ec ho\u00e3n vi\u1ec7c c\u1ea5p ph\u00e1t b\u1ed9 nh\u1edb v\u00e0 sao ch\u00e9p cho \u0111\u1ebfn khi th\u1ef1c s\u1ef1 c\u1ea7n thi\u1ebft (t\u1ee9c l\u00e0 khi b\u1ea1n mu\u1ed1n thay \u0111\u1ed5i d\u1eef li\u1ec7u).</p> <p>\u0110\u1ecbnh ngh\u0129a trong th\u01b0 vi\u1ec7n chu\u1ea9n c\u1ee7a Rust (\u0111\u01a1n gi\u1ea3n h\u00f3a): Rust<pre><code>pub enum Cow&lt;'a, T&gt;\nwhere\n    T: 'a + ToOwned + ?Sized,\n{\n    Borrowed(&amp;'a T),\n    Owned(&lt;T as ToOwned&gt;::Owned),\n}\n</code></pre> *   <code>T: ?Sized</code>: Cho ph\u00e9p <code>Cow</code> l\u00e0m vi\u1ec7c v\u1edbi c\u00e1c ki\u1ec3u kh\u00f4ng c\u00f3 k\u00edch th\u01b0\u1edbc c\u1ed1 \u0111\u1ecbnh nh\u01b0 <code>str</code> v\u00e0 <code>[T]</code>. *   <code>T: ToOwned</code>: Y\u00eau c\u1ea7u ki\u1ec3u <code>T</code> ph\u1ea3i bi\u1ebft c\u00e1ch t\u1ea1o ra m\u1ed9t phi\u00ean b\u1ea3n s\u1edf h\u1eefu c\u1ee7a ch\u00ednh n\u00f3 (v\u00ed d\u1ee5: <code>str</code> c\u00f3 th\u1ec3 t\u1ea1o ra <code>String</code>).</p>"},{"location":"Documents/19_smart_pointers/cow1/#3-diagram-truc-quan-cau-truc-cua-cow","title":"3. Diagram Tr\u1ef1c Quan: C\u1ea5u tr\u00fac c\u1ee7a <code>Cow</code>","text":"<p>H\u00e3y h\u00ecnh dung <code>Cow</code> nh\u01b0 m\u1ed9t chi\u1ebfc h\u1ed9p c\u00f3 th\u1ec3 ch\u1ee9a m\u1ed9t trong hai th\u1ee9:</p> Text Only<pre><code>+--------------------------------+\n|          Cow&lt;'a, str&gt;          |\n|                                |\n|  C\u00f3 th\u1ec3 l\u00e0 m\u1ed9t trong hai:       |\n|                                |\n| +----------------------------+ |\n| |      Borrowed(&amp;'a str)     | | ----&gt; Tr\u1ecf \u0111\u1ebfn m\u1ed9t chu\u1ed7i \u0111\u00e3 t\u1ed3n t\u1ea1i \u1edf \u0111\u00e2u \u0111\u00f3\n| +----------------------------+ |\n|                                |\n|              HO\u1eb6C              |\n|                                |\n| +----------------------------+ |\n| |         Owned(String)      | | ----&gt; S\u1edf h\u1eefu m\u1ed9t chu\u1ed7i ho\u00e0n to\u00e0n m\u1edbi tr\u00ean heap\n| +----------------------------+ |\n+--------------------------------+\n</code></pre>"},{"location":"Documents/19_smart_pointers/cow1/#4-vi-du-truu-tuong-ham-chuan-hoa-tin-nhan","title":"4. V\u00ed D\u1ee5 Tr\u1eebu T\u01b0\u1ee3ng: H\u00e0m \"chu\u1ea9n h\u00f3a\" tin nh\u1eafn","text":"<p>H\u00e3y vi\u1ebft m\u1ed9t h\u00e0m <code>normalize_message</code> nh\u1eadn v\u00e0o m\u1ed9t tin nh\u1eafn. N\u1ebfu tin nh\u1eafn c\u00f3 ch\u1ee9a t\u1eeb \"g\u1ea5p\", h\u00e0m s\u1ebd chuy\u1ec3n to\u00e0n b\u1ed9 tin nh\u1eafn th\u00e0nh ch\u1eef hoa. N\u1ebfu kh\u00f4ng, n\u00f3 s\u1ebd gi\u1eef nguy\u00ean.</p> <p>\u0110\u00e2y l\u00e0 k\u1ecbch b\u1ea3n ho\u00e0n h\u1ea3o cho <code>Cow</code>:</p> <ul> <li>Kh\u00f4ng c\u00f3 t\u1eeb \"g\u1ea5p\": Ch\u1ec9 c\u1ea7n \u0111\u1ecdc. D\u00f9ng <code>Borrowed</code> l\u00e0 \u0111\u1ee7. Kh\u00f4ng t\u1ed1n chi ph\u00ed.</li> <li>C\u00f3 t\u1eeb \"g\u1ea5p\": C\u1ea7n s\u1eeda \u0111\u1ed5i. Ph\u1ea3i clone \u0111\u1ec3 t\u1ea1o <code>String</code> m\u1edbi v\u00e0 chuy\u1ec3n th\u00e0nh ch\u1eef hoa. D\u00f9ng <code>Owned</code>.</li> </ul> Rust<pre><code>use std::borrow::Cow;\n\n// H\u00e0m nh\u1eadn v\u00e0o m\u1ed9t tham chi\u1ebfu v\u00e0 tr\u1ea3 v\u1ec1 m\u1ed9t Cow\n// Cow s\u1ebd l\u00e0 Borrowed n\u1ebfu kh\u00f4ng thay \u0111\u1ed5i, ho\u1eb7c Owned n\u1ebfu c\u00f3 thay \u0111\u1ed5i.\nfn normalize_message(message: &amp;str) -&gt; Cow&lt;str&gt; {\n    if message.contains(\"g\u1ea5p\") {\n        // C\u1ea7n thay \u0111\u1ed5i -&gt; Ph\u1ea3i clone v\u00e0 s\u1edf h\u1eefu d\u1eef li\u1ec7u m\u1edbi\n        println!(\"-&gt; Ph\u00e1t hi\u1ec7n t\u1eeb 'g\u1ea5p'. \u0110ang ti\u1ebfn h\u00e0nh clone v\u00e0 chuy\u1ec3n th\u00e0nh ch\u1eef hoa.\");\n        let uppercased_message = message.to_uppercase();\n        Cow::Owned(uppercased_message) // Tr\u1ea3 v\u1ec1 phi\u00ean b\u1ea3n s\u1edf h\u1eefu\n    } else {\n        // Kh\u00f4ng c\u1ea7n thay \u0111\u1ed5i -&gt; Ch\u1ec9 c\u1ea7n vay m\u01b0\u1ee3n l\u00e0 \u0111\u1ee7\n        println!(\"-&gt; Tin nh\u1eafn h\u1ee3p l\u1ec7. Kh\u00f4ng c\u1ea7n clone.\");\n        Cow::Borrowed(message) // Tr\u1ea3 v\u1ec1 phi\u00ean b\u1ea3n vay m\u01b0\u1ee3n\n    }\n}\n\nfn main() {\n    let msg1 = \"h\u1ecdp kh\u1ea9n c\u1ea5p\";\n    let msg2 = \"nh\u1edb \u0111i \u0111\u1ed5 r\u00e1c\";\n\n    println!(\"X\u1eed l\u00fd tin nh\u1eafn 1: '{}'\", msg1);\n    let normalized1 = normalize_message(msg1);\n    // normalized1 b\u00e2y gi\u1edd l\u00e0 Cow::Owned\n\n    println!(\"\\nX\u1eed l\u00fd tin nh\u1eafn 2: '{}'\", msg2);\n    let normalized2 = normalize_message(msg2);\n    // normalized2 b\u00e2y gi\u1edd l\u00e0 Cow::Borrowed\n\n    // D\u00f9 l\u00e0 Owned hay Borrowed, ta c\u00f3 th\u1ec3 d\u00f9ng ch\u00fang nh\u01b0 m\u1ed9t &amp;str b\u00ecnh th\u01b0\u1eddng\n    // nh\u1edd v\u00e0o vi\u1ec7c Cow implement trait Deref.\n    println!(\"\\nK\u1ebft qu\u1ea3 cu\u1ed1i c\u00f9ng:\");\n    println!(\"Tin nh\u1eafn 1 chu\u1ea9n h\u00f3a: {}\", normalized1);\n    println!(\"Tin nh\u1eafn 2 chu\u1ea9n h\u00f3a: {}\", normalized2);\n}\n</code></pre>"},{"location":"Documents/19_smart_pointers/cow1/#5-co-che-clone-on-write-hoat-ong-phan-tich-to_mut","title":"5. C\u01a1 Ch\u1ebf \"Clone-on-Write\" Ho\u1ea1t \u0110\u1ed9ng: Ph\u00e2n t\u00edch <code>to_mut()</code>","text":"<p>Ph\u01b0\u01a1ng th\u1ee9c quan tr\u1ecdng nh\u1ea5t th\u1ec3 hi\u1ec7n s\u1ee9c m\u1ea1nh c\u1ee7a <code>Cow</code> l\u00e0 <code>to_mut()</code>. Ph\u01b0\u01a1ng th\u1ee9c n\u00e0y tr\u1ea3 v\u1ec1 m\u1ed9t tham chi\u1ebfu c\u00f3 th\u1ec3 thay \u0111\u1ed5i (<code>&amp;mut T</code>).</p> <ul> <li>N\u1ebfu <code>Cow</code> \u0111ang \u1edf tr\u1ea1ng th\u00e1i <code>Borrowed</code>, <code>to_mut()</code> s\u1ebd clone d\u1eef li\u1ec7u, chuy\u1ec3n <code>Cow</code> sang tr\u1ea1ng th\u00e1i <code>Owned</code>, v\u00e0 tr\u1ea3 v\u1ec1 m\u1ed9t tham chi\u1ebfu c\u00f3 th\u1ec3 thay \u0111\u1ed5i \u0111\u1ebfn d\u1eef li\u1ec7u m\u1edbi n\u00e0y.</li> <li>N\u1ebfu <code>Cow</code> \u0111\u00e3 \u1edf tr\u1ea1ng th\u00e1i <code>Owned</code>, <code>to_mut()</code> ch\u1ec9 \u0111\u01a1n gi\u1ea3n l\u00e0 tr\u1ea3 v\u1ec1 m\u1ed9t tham chi\u1ebfu c\u00f3 th\u1ec3 thay \u0111\u1ed5i \u0111\u1ebfn d\u1eef li\u1ec7u hi\u1ec7n c\u00f3. Kh\u00f4ng c\u00f3 vi\u1ec7c clone n\u00e0o x\u1ea3y ra.</li> </ul>"},{"location":"Documents/19_smart_pointers/cow1/#diagram-cho-to_mut-khi-cow-la-borrowed","title":"Diagram cho <code>to_mut()</code> khi <code>Cow</code> l\u00e0 <code>Borrowed</code>","text":"<p>Gi\u1ea3 s\u1eed ch\u00fang ta c\u00f3 m\u1ed9t <code>Cow</code> \u0111ang m\u01b0\u1ee3n chu\u1ed7i <code>\"hello\"</code>.</p> <p>1. Tr\u1ea1ng th\u00e1i ban \u0111\u1ea7u: Text Only<pre><code>   D\u1eef li\u1ec7u g\u1ed1c (tr\u00ean stack ho\u1eb7c static)\n   +-----------+\n   |  \"hello\"  |\n   +-----------+\n        ^\n        |\n+---------------------+\n| cow: Cow::Borrowed(&amp;) |\n+---------------------+\n</code></pre></p> <p>2. G\u1ecdi <code>cow.to_mut()</code>: Text Only<pre><code>   D\u1eef li\u1ec7u g\u1ed1c\n   +-----------+\n   |  \"hello\"  |\n   +-----------+\n        ^\n        |\n+---------------------+      1. Clone d\u1eef li\u1ec7u g\u1ed1c\n| cow: Cow::Borrowed(&amp;) |  ---------------------&gt; T\u1ea1o ra v\u00f9ng nh\u1edb m\u1edbi tr\u00ean heap\n+---------------------+\n</code></pre></p> <p>3. Tr\u1ea1ng th\u00e1i sau khi <code>to_mut()</code> ho\u00e0n t\u1ea5t: Text Only<pre><code>   D\u1eef li\u1ec7u g\u1ed1c (v\u1eabn c\u00f2n \u0111\u00f3)      D\u1eef li\u1ec7u m\u1edbi (tr\u00ean heap)\n   +-----------+                    +-----------------+\n   |  \"hello\"  |                    |  String(\"hello\")| &lt;--+\n   +-----------+                    +-----------------+    | 4. `&amp;mut` tr\u1ecf t\u1edbi \u0111\u00e2y\n                                          ^                |\n                                          |                |\n+---------------------+      2. Chuy\u1ec3n th\u00e0nh Owned      |\n| cow: Cow::Owned(S)  | ---------------------------------+\n+---------------------+      3. `cow` b\u00e2y gi\u1edd tr\u1ecf v\u00e0o d\u1eef li\u1ec7u m\u1edbi\n</code></pre> =&gt; Chi ph\u00ed clone v\u00e0 c\u1ea5p ph\u00e1t b\u1ed9 nh\u1edb \u0111\u00e3 x\u1ea3y ra.</p>"},{"location":"Documents/19_smart_pointers/cow1/#diagram-cho-to_mut-khi-cow-la-owned","title":"Diagram cho <code>to_mut()</code> khi <code>Cow</code> l\u00e0 <code>Owned</code>","text":"<p>Gi\u1ea3 s\u1eed <code>cow</code> \u0111\u00e3 s\u1edf h\u1eefu m\u1ed9t <code>String(\"world\")</code>.</p> <p>1. Tr\u1ea1ng th\u00e1i ban \u0111\u1ea7u: Text Only<pre><code>                                  D\u1eef li\u1ec7u s\u1edf h\u1eefu (tr\u00ean heap)\n                                  +-----------------+\n                                  | String(\"world\") |\n                                  +-----------------+\n                                          ^\n                                          |\n+---------------------+\n| cow: Cow::Owned(S)  |\n+---------------------+\n</code></pre></p> <p>2. G\u1ecdi <code>cow.to_mut()</code>: Text Only<pre><code>                                  D\u1eef li\u1ec7u s\u1edf h\u1eefu (tr\u00ean heap)\n                                  +-----------------+\n                                  | String(\"world\") | &lt;--+\n                                  +-----------------+    | 2. `&amp;mut` tr\u1ecf th\u1eb3ng t\u1edbi \u0111\u00e2y\n                                          ^                |\n                                          |                |\n+---------------------+      1. Kh\u00f4ng c\u1ea7n clone!      |\n| cow: Cow::Owned(S)  | -------------------------------+\n+---------------------+\n</code></pre> =&gt; Kh\u00f4ng c\u00f3 chi ph\u00ed clone. C\u1ef1c k\u1ef3 hi\u1ec7u qu\u1ea3.</p>"},{"location":"Documents/19_smart_pointers/cow1/#6-code-hoan-chinh-su-dung-to_mut","title":"6. Code Ho\u00e0n Ch\u1ec9nh: S\u1eed d\u1ee5ng <code>to_mut</code>","text":"<p>\u0110\u00e2y l\u00e0 m\u1ed9t v\u00ed d\u1ee5 kh\u00e1c s\u1eed d\u1ee5ng <code>to_mut</code> \u0111\u1ec3 s\u1eeda \u0111\u1ed5i t\u1ea1i ch\u1ed7.</p> <p>Rust<pre><code>use std::borrow::Cow;\n\nfn ensure_uppercased_ending&lt;'a&gt;(text: &amp;'a str) -&gt; Cow&lt;'a, str&gt; {\n    let mut cow = Cow::from(text); // B\u1eaft \u0111\u1ea7u v\u1edbi Cow::Borrowed\n\n    if !text.ends_with(\"!!!\") {\n        println!(\"-&gt; V\u0103n b\u1ea3n c\u1ea7n s\u1eeda \u0111\u1ed5i.\");\n        // \u0110\u00e2y l\u00e0 l\u00fac ph\u00e9p m\u00e0u x\u1ea3y ra!\n        // V\u00ec cow \u0111ang l\u00e0 Borrowed, to_mut() s\u1ebd clone v\u00e0 chuy\u1ec3n n\u00f3 th\u00e0nh Owned.\n        cow.to_mut().push_str(\"!!!\");\n    } else {\n        println!(\"-&gt; V\u0103n b\u1ea3n \u0111\u00e3 ho\u00e0n h\u1ea3o.\");\n        // Kh\u00f4ng g\u1ecdi to_mut(), cow v\u1eabn l\u00e0 Borrowed.\n    }\n\n    cow\n}\n\nfn main() {\n    let s1 = \"S\u1ef1 ki\u1ec7n quan tr\u1ecdng\";\n    println!(\"X\u1eed l\u00fd: '{}'\", s1);\n    let res1 = ensure_uppercased_ending(s1);\n    // res1 l\u00e0 Cow::Owned v\u00ec \u0111\u00e3 b\u1ecb thay \u0111\u1ed5i\n\n    println!(\"\\n------------------------\\n\");\n\n    let s2 = \"S\u1ef1 ki\u1ec7n quan tr\u1ecdng!!!\";\n    println!(\"X\u1eed l\u00fd: '{}'\", s2);\n    let res2 = ensure_uppercased_ending(s2);\n    // res2 l\u00e0 Cow::Borrowed v\u00ec kh\u00f4ng b\u1ecb thay \u0111\u1ed5i\n\n    println!(\"\\nK\u1ebft qu\u1ea3 cu\u1ed1i c\u00f9ng:\");\n    println!(\"res1 ({:?}): {}\", res1, res1);\n    println!(\"res2 ({:?}): {}\", res2, res2);\n\n    // Ki\u1ec3m tra xem res2 c\u00f3 th\u1ef1c s\u1ef1 m\u01b0\u1ee3n t\u1eeb s2 kh\u00f4ng\n    // So s\u00e1nh \u0111\u1ecba ch\u1ec9 con tr\u1ecf\n    assert_eq!(res2.as_ptr(), s2.as_ptr(), \"res2 ph\u1ea3i m\u01b0\u1ee3n t\u1eeb s2\");\n    println!(\"\\nKi\u1ec3m tra th\u00e0nh c\u00f4ng: res2 th\u1ef1c s\u1ef1 ch\u1ec9 l\u00e0 m\u1ed9t tham chi\u1ebfu \u0111\u1ebfn d\u1eef li\u1ec7u g\u1ed1c!\");\n}\n</code></pre> Output c\u1ee7a ch\u01b0\u01a1ng tr\u00ecnh tr\u00ean s\u1ebd cho th\u1ea5y r\u00f5 khi n\u00e0o vi\u1ec7c clone x\u1ea3y ra v\u00e0 khi n\u00e0o kh\u00f4ng.</p>"},{"location":"Documents/19_smart_pointers/cow1/#7-loi-ich-va-han-che","title":"7. L\u1ee3i \u00cdch v\u00e0 H\u1ea1n Ch\u1ebf","text":""},{"location":"Documents/19_smart_pointers/cow1/#loi-ich","title":"L\u1ee3i \u00cdch","text":"<ol> <li>T\u1ed1i \u01b0u hi\u1ec7u n\u0103ng: Tr\u00e1nh \u0111\u01b0\u1ee3c vi\u1ec7c c\u1ea5p ph\u00e1t b\u1ed9 nh\u1edb v\u00e0 clone kh\u00f4ng c\u1ea7n thi\u1ebft, \u0111\u1eb7c bi\u1ec7t h\u1eefu \u00edch khi x\u1eed l\u00fd l\u01b0\u1ee3ng l\u1edbn d\u1eef li\u1ec7u m\u00e0 ph\u1ea7n l\u1edbn kh\u00f4ng c\u1ea7n s\u1eeda \u0111\u1ed5i.</li> <li>API linh ho\u1ea1t: Cho ph\u00e9p vi\u1ebft c\u00e1c h\u00e0m c\u00f3 th\u1ec3 ch\u1ea5p nh\u1eadn c\u1ea3 d\u1eef li\u1ec7u vay m\u01b0\u1ee3n v\u00e0 s\u1edf h\u1eefu, l\u00e0m cho th\u01b0 vi\u1ec7n c\u1ee7a b\u1ea1n d\u1ec5 s\u1eed d\u1ee5ng h\u01a1n.</li> </ol>"},{"location":"Documents/19_smart_pointers/cow1/#han-che","title":"H\u1ea1n Ch\u1ebf","text":"<ol> <li>Ph\u1ee9c t\u1ea1p h\u01a1n: Logic c\u1ee7a <code>Cow</code> c\u00f3 th\u1ec3 l\u00e0m code kh\u00f3 \u0111\u1ecdc h\u01a1n m\u1ed9t ch\u00fat so v\u1edbi vi\u1ec7c ch\u1ec9 d\u00f9ng <code>&amp;str</code> ho\u1eb7c <code>String</code>.</li> <li>Overhead nh\u1ecf: C\u00f3 m\u1ed9t chi ph\u00ed nh\u1ecf khi ch\u1ea1y \u0111\u1ec3 ki\u1ec3m tra xem <code>Cow</code> l\u00e0 <code>Borrowed</code> hay <code>Owned</code>. Tuy nhi\u00ean, chi ph\u00ed n\u00e0y g\u1ea7n nh\u01b0 kh\u00f4ng \u0111\u00e1ng k\u1ec3 so v\u1edbi chi ph\u00ed c\u1ea5p ph\u00e1t b\u1ed9 nh\u1edb.</li> </ol>"},{"location":"Documents/19_smart_pointers/cow1/#8-tong-ket","title":"8. T\u1ed5ng K\u1ebft","text":"<p><code>Cow</code> l\u00e0 m\u1ed9t c\u00f4ng c\u1ee5 t\u1ed1i \u01b0u h\u00f3a m\u1ea1nh m\u1ebd v\u00e0 thanh l\u1ecbch trong Rust. N\u00f3 l\u00e0 c\u00e2y c\u1ea7u n\u1ed1i gi\u1eefa th\u1ebf gi\u1edbi \"vay m\u01b0\u1ee3n\" hi\u1ec7u qu\u1ea3 v\u00e0 th\u1ebf gi\u1edbi \"s\u1edf h\u1eefu\" linh ho\u1ea1t.</p> <p>H\u00e3y s\u1eed d\u1ee5ng <code>Cow</code> khi:</p> <ul> <li>B\u1ea1n \u0111ang vi\u1ebft m\u1ed9t h\u00e0m ho\u1eb7c API.</li> <li>H\u00e0m \u0111\u00f3 nh\u1eadn d\u1eef li\u1ec7u \u0111\u1ea7u v\u00e0o.</li> <li>H\u00e0m \u0111\u00f3 c\u00f3 th\u1ec3 c\u1ea7n ph\u1ea3i s\u1eeda \u0111\u1ed5i d\u1eef li\u1ec7u \u0111\u00f3, nh\u01b0ng trong nhi\u1ec1u tr\u01b0\u1eddng h\u1ee3p th\u00ec kh\u00f4ng.</li> </ul> <p>B\u1eb1ng c\u00e1ch s\u1eed d\u1ee5ng <code>Cow</code>, b\u1ea1n trao cho Rust kh\u1ea3 n\u0103ng \u0111\u01b0a ra l\u1ef1a ch\u1ecdn hi\u1ec7u qu\u1ea3 nh\u1ea5t t\u1ea1i th\u1eddi \u0111i\u1ec3m ch\u1ea1y: ch\u1ec9 clone khi th\u1ef1c s\u1ef1 c\u1ea7n thi\u1ebft.</p>"},{"location":"Documents/19_smart_pointers/cow1/#phu-luc","title":"Ph\u1ee5 l\u1ee5c","text":"<p>D\u01b0\u1edbi \u0111\u00e2y l\u00e0 b\u1ea3ng t\u00f3m t\u1eaft c\u00e1c quy t\u1eafc ho\u1ea1t \u0111\u1ed9ng c\u1ee7a <code>Cow&lt;'a, T&gt;</code>.</p>"},{"location":"Documents/19_smart_pointers/cow1/#bang-tom-tat-quy-tac-hoat-ong-cua-cow","title":"B\u1ea3ng T\u00f3m T\u1eaft Quy T\u1eafc Ho\u1ea1t \u0110\u1ed9ng C\u1ee7a <code>Cow</code>","text":"T\u00ecnh Hu\u1ed1ng Ban \u0110\u1ea7u (C\u00e1ch <code>Cow</code> \u0111\u01b0\u1ee3c t\u1ea1o) H\u00e0nh \u0110\u1ed9ng Ti\u1ebfp Theo Tr\u1ea1ng Th\u00e1i Cu\u1ed1i C\u00f9ng c\u1ee7a <code>Cow</code> Hi\u1ec7u Su\u1ea5t / \u0110i\u1ec1u G\u00ec X\u1ea3y Ra? T\u1ea1o t\u1eeb tham chi\u1ebfu<code>Cow::from(&amp;data)</code> Kh\u00f4ng s\u1eeda \u0111\u1ed5i(Ch\u1ec9 \u0111\u1ecdc) <code>Cow::Borrowed</code> Kh\u00f4ng clone, kh\u00f4ng c\u1ea5p ph\u00e1t b\u1ed9 nh\u1edb. Si\u00eau hi\u1ec7u qu\u1ea3. <code>Cow</code> ch\u1ec9 l\u00e0 m\u1ed9t con tr\u1ecf. T\u1ea1o t\u1eeb tham chi\u1ebfu<code>Cow::from(&amp;data)</code> C\u1ea7n s\u1eeda \u0111\u1ed5i(G\u1ecdi <code>to_mut()</code>) <code>Cow::Owned</code> Clone d\u1eef li\u1ec7u g\u1ed1c, c\u1ea5p ph\u00e1t b\u1ed9 nh\u1edb m\u1edbi. <code>Cow</code> chuy\u1ec3n t\u1eeb m\u01b0\u1ee3n sang s\u1edf h\u1eefu. T\u1ea1o t\u1eeb gi\u00e1 tr\u1ecb s\u1edf h\u1eefu<code>Cow::from(data)</code> Kh\u00f4ng s\u1eeda \u0111\u1ed5i(Ch\u1ec9 \u0111\u1ecdc) <code>Cow::Owned</code> Kh\u00f4ng clone th\u00eam. D\u1eef li\u1ec7u \u0111\u00e3 \u0111\u01b0\u1ee3c s\u1edf h\u1eefu t\u1eeb \u0111\u1ea7u. T\u1ea1o t\u1eeb gi\u00e1 tr\u1ecb s\u1edf h\u1eefu<code>Cow::from(data)</code> C\u1ea7n s\u1eeda \u0111\u1ed5i(G\u1ecdi <code>to_mut()</code>) <code>Cow::Owned</code> Kh\u00f4ng clone. S\u1eeda \u0111\u1ed5i tr\u1ef1c ti\u1ebfp tr\u00ean d\u1eef li\u1ec7u \u0111ang s\u1edf h\u1eefu. <p>B\u1ea3ng n\u00e0y t\u00f3m g\u1ecdn nguy\u00ean t\u1eafc \"Clone-on-Write\": <code>Cow</code> ch\u1ec9 th\u1ef1c hi\u1ec7n vi\u1ec7c clone v\u00e0 c\u1ea5p ph\u00e1t b\u1ed9 nh\u1edb trong duy nh\u1ea5t m\u1ed9t tr\u01b0\u1eddng h\u1ee3p\u2014khi b\u1ea1n c\u1ea7n s\u1eeda \u0111\u1ed5i m\u1ed9t d\u1eef li\u1ec7u m\u00e0 ban \u0111\u1ea7u n\u00f3 ch\u1ec9 \u0111ang vay m\u01b0\u1ee3n. Trong t\u1ea5t c\u1ea3 c\u00e1c tr\u01b0\u1eddng h\u1ee3p kh\u00e1c, n\u00f3 \u0111\u1ec1u tr\u00e1nh \u0111\u01b0\u1ee3c chi ph\u00ed n\u00e0y.</p>"}]}