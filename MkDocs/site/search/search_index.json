{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome","text":""},{"location":"#welcome-to-learnrustlings-documentation","title":"Welcome to LearnRustlings Documentation!","text":"<p>This documentation serves as a comprehensive guide and personal knowledge base for my journey through the Rustlings exercises. Here, you'll find my solutions, explanations, and key takeaways for each exercise, organized for easy navigation and reference.</p>"},{"location":"#what-is-rustlings","title":"What is Rustlings?","text":"<p>Rustlings is a fantastic command-line tool designed to help you learn the Rust programming language by solving small, bite-sized exercises. Each exercise focuses on a specific Rust concept, gradually building your understanding from the basics to more advanced topics. It's an interactive and hands-on way to solidify your Rust knowledge.</p>"},{"location":"#why-this-documentation","title":"Why This Documentation?","text":"<p>As I progress through Rustlings, I've created this documentation for several reasons:</p> <ul> <li>Personal Learning: To reinforce my understanding of Rust concepts by articulating solutions and explanations in my own words.</li> <li>Knowledge Base: To build a searchable and organized repository of solutions and common Rust patterns.</li> <li>Future Reference: To quickly recall how specific Rust features work or how certain problems were solved.</li> <li>Sharing: To potentially help other learners by providing alternative perspectives or detailed breakdowns of the exercises.</li> </ul>"},{"location":"#repository-structure","title":"Repository Structure","text":"<p>This MkDocs documentation is built from the content within the <code>https://github.com/dohuyhoang93/LearnRustlings</code> repository. The exercise solutions and explanations are structured to mirror the Rustlings exercise categories for logical flow.</p> <p>You can navigate through the exercises using the sidebar. Each section corresponds to a Rustlings module (e.g., <code>variables</code>, <code>functions</code>, <code>collections</code>, <code>smart_pointers</code>, etc.).</p>"},{"location":"#getting-started","title":"Getting Started","text":"<p>To explore the exercises and their explanations:</p> <ol> <li>Navigate the Sidebar: Use the navigation menu on the left to browse through different Rustlings categories and individual exercises.</li> <li>Search: Use the search bar to quickly find specific topics or exercise names.</li> </ol>"},{"location":"#contributions","title":"Contributions","text":"<p>This is primarily a personal learning project. However, if you find any errors or have suggestions for clearer explanations, feel free to open an issue or a pull request on the GitHub repository.</p> <p>Thank you for visiting! Happy Rusting!</p>"},{"location":"Documents/19_smart_pointers/cow1/","title":"Cow (Clone-on-Write) trong Rust","text":""},{"location":"Documents/19_smart_pointers/cow1/#bai-giang-chi-tiet-cowa-t-trong-rust-su-linh-hoat-giua-so-huu-va-vay-muon","title":"B\u00c0I GI\u1ea2NG CHI TI\u1ebeT: <code>Cow&lt;'a, T&gt;</code> TRONG RUST - S\u1ef0 LINH HO\u1ea0T GI\u1eeeA S\u1ede H\u1eeeU V\u00c0 VAY M\u01af\u1ee2N","text":""},{"location":"Documents/19_smart_pointers/cow1/#muc-luc","title":"M\u1ee5c L\u1ee5c","text":"<ol> <li>V\u1ea5n \u0110\u1ec1 C\u1ed1t L\u00f5i: T\u1ea1i sao <code>Cow</code> l\u1ea1i t\u1ed3n t\u1ea1i?</li> <li><code>Cow</code> l\u00e0 g\u00ec? Gi\u1edbi thi\u1ec7u v\u00e0 \u0111\u1ecbnh ngh\u0129a.</li> <li>Diagram Tr\u1ef1c Quan: C\u1ea5u tr\u00fac c\u1ee7a <code>Cow</code>.</li> <li>V\u00ed D\u1ee5 Kinh \u0110i\u1ec3n: Khi n\u00e0o m\u1ed9t h\u00e0m c\u1ea7n <code>Cow</code>?</li> <li>C\u01a1 Ch\u1ebf \"Clone-on-Write\" Ho\u1ea1t \u0110\u1ed9ng: Ph\u00e2n t\u00edch <code>to_mut()</code> v\u1edbi Diagram.</li> <li>Code Ho\u00e0n Ch\u1ec9nh: Ch\u1ea1y v\u00e0 th\u1eed nghi\u1ec7m.</li> <li>L\u1ee3i \u00cdch v\u00e0 H\u1ea1n Ch\u1ebf.</li> <li>T\u1ed5ng K\u1ebft.</li> </ol>"},{"location":"Documents/19_smart_pointers/cow1/#1-van-e-cot-loi-tai-sao-cow-lai-ton-tai","title":"1. V\u1ea5n \u0110\u1ec1 C\u1ed1t L\u00f5i: T\u1ea1i sao <code>Cow</code> l\u1ea1i t\u1ed3n t\u1ea1i?","text":"<p>Trong Rust, ch\u00fang ta th\u01b0\u1eddng xuy\u00ean \u0111\u1ed1i m\u1eb7t v\u1edbi l\u1ef1a ch\u1ecdn gi\u1eefa:</p> <ul> <li>D\u1eef li\u1ec7u s\u1edf h\u1eefu (Owned Data): V\u00ed d\u1ee5 nh\u01b0 <code>String</code> ho\u1eb7c <code>Vec&lt;T&gt;</code>. Ch\u00fang c\u00f3 to\u00e0n quy\u1ec1n ki\u1ec3m so\u00e1t d\u1eef li\u1ec7u, c\u00f3 th\u1ec3 thay \u0111\u1ed5i n\u00f3, v\u00e0 ch\u1ecbu tr\u00e1ch nhi\u1ec7m gi\u1ea3i ph\u00f3ng b\u1ed9 nh\u1edb. Vi\u1ec7c t\u1ea1o ra ch\u00fang (v\u00ed d\u1ee5, clone m\u1ed9t <code>&amp;str</code> th\u00e0nh <code>String</code>) t\u1ed1n chi ph\u00ed v\u00ec ph\u1ea3i c\u1ea5p ph\u00e1t b\u1ed9 nh\u1edb m\u1edbi tr\u00ean heap.</li> <li>D\u1eef li\u1ec7u vay m\u01b0\u1ee3n (Borrowed Data): V\u00ed d\u1ee5 nh\u01b0 <code>&amp;str</code> ho\u1eb7c <code>&amp;[T]</code>. Ch\u00fang ch\u1ec9 l\u00e0 m\u1ed9t tham chi\u1ebfu (m\u1ed9t \"con tr\u1ecf\") \u0111\u1ebfn d\u1eef li\u1ec7u thu\u1ed9c s\u1edf h\u1eefu c\u1ee7a ng\u01b0\u1eddi kh\u00e1c. Ch\u00fang r\u1ea5t nh\u1eb9 v\u00e0 nhanh, nh\u01b0ng ch\u00fang kh\u00f4ng th\u1ec3 thay \u0111\u1ed5i d\u1eef li\u1ec7u (tr\u1eeb khi l\u00e0 <code>&amp;mut</code>) v\u00e0 b\u1ecb gi\u1edbi h\u1ea1n b\u1edfi lifetime.</li> </ul> <p>T\u00ecnh hu\u1ed1ng: H\u00e3y t\u01b0\u1edfng t\u01b0\u1ee3ng b\u1ea1n vi\u1ebft m\u1ed9t h\u00e0m nh\u1eadn v\u00e0o m\u1ed9t chu\u1ed7i.</p> <ul> <li>N\u1ebfu chu\u1ed7i \u0111\u00f3 \u0111\u00e3 h\u1ee3p l\u1ec7, b\u1ea1n ch\u1ec9 c\u1ea7n \u0111\u1ecdc n\u00f3. D\u00f9ng <code>&amp;str</code> l\u00e0 hi\u1ec7u qu\u1ea3 nh\u1ea5t, kh\u00f4ng c\u1ea7n c\u1ea5p ph\u00e1t b\u1ed9 nh\u1edb.</li> <li>N\u1ebfu chu\u1ed7i \u0111\u00f3 kh\u00f4ng h\u1ee3p l\u1ec7 v\u00e0 c\u1ea7n s\u1eeda \u0111\u1ed5i (v\u00ed d\u1ee5: lo\u1ea1i b\u1ecf kho\u1ea3ng tr\u1eafng th\u1eeba, chuy\u1ec3n th\u00e0nh ch\u1eef hoa), b\u1ea1n c\u1ea7n m\u1ed9t b\u1ea3n sao c\u00f3 th\u1ec3 thay \u0111\u1ed5i. T\u1ee9c l\u00e0 b\u1ea1n c\u1ea7n t\u1ea1o ra m\u1ed9t <code>String</code>.</li> </ul> <p>L\u00e0m th\u1ebf n\u00e0o \u0111\u1ec3 vi\u1ebft m\u1ed9t h\u00e0m duy nh\u1ea5t c\u00f3 th\u1ec3 x\u1eed l\u00fd c\u1ea3 hai tr\u01b0\u1eddng h\u1ee3p n\u00e0y m\u1ed9t c\u00e1ch hi\u1ec7u qu\u1ea3 nh\u1ea5t?</p> <ul> <li>C\u00e1ch 1: Lu\u00f4n nh\u1eadn <code>&amp;str</code> v\u00e0 tr\u1ea3 v\u1ec1 m\u1ed9t <code>String</code> m\u1edbi.<ul> <li>Nh\u01b0\u1ee3c \u0111i\u1ec3m: Ngay c\u1ea3 khi kh\u00f4ng c\u1ea7n thay \u0111\u1ed5i, b\u1ea1n v\u1eabn ph\u1ea3i c\u1ea5p ph\u00e1t b\u1ed9 nh\u1edb v\u00e0 t\u1ea1o <code>String</code> m\u1edbi. L\u00e3ng ph\u00ed!</li> </ul> </li> <li>C\u00e1ch 2: Nh\u1eadn m\u1ed9t <code>&amp;mut String</code>.<ul> <li>Nh\u01b0\u1ee3c \u0111i\u1ec3m: B\u1eaft bu\u1ed9c ng\u01b0\u1eddi g\u1ecdi ph\u1ea3i c\u00f3 m\u1ed9t <code>String</code> s\u1edf h\u1eefu v\u00e0 c\u00f3 th\u1ec3 thay \u0111\u1ed5i. Kh\u00f4ng th\u1ec3 truy\u1ec1n v\u00e0o m\u1ed9t chu\u1ed7i h\u1eb1ng nh\u01b0 <code>\"hello world\"</code>. K\u00e9m linh ho\u1ea1t.</li> </ul> </li> </ul> <p>\u0110\u00e2y ch\u00ednh l\u00e0 l\u00fac <code>Cow</code> t\u1ecfa s\u00e1ng.</p>"},{"location":"Documents/19_smart_pointers/cow1/#2-cow-la-gi-gioi-thieu-va-inh-nghia","title":"2. <code>Cow</code> l\u00e0 g\u00ec? Gi\u1edbi thi\u1ec7u v\u00e0 \u0110\u1ecbnh ngh\u0129a","text":"<p><code>Cow</code> l\u00e0 vi\u1ebft t\u1eaft c\u1ee7a \"Clone-on-Write\" (Sao ch\u00e9p khi c\u1ea7n ghi/s\u1eeda \u0111\u1ed5i).</p> <p>N\u00f3 l\u00e0 m\u1ed9t ki\u1ec3u <code>enum</code> th\u00f4ng minh (smart pointer) c\u00f3 th\u1ec3 ch\u1ee9a m\u1ed9t trong hai bi\u1ebfn th\u1ec3:</p> <ul> <li><code>Borrowed(&amp;'a T)</code>: M\u1ed9t tham chi\u1ebfu vay m\u01b0\u1ee3n. R\u1ebb, nhanh, kh\u00f4ng s\u1edf h\u1eefu.</li> <li><code>Owned(T)</code>: M\u1ed9t d\u1eef li\u1ec7u s\u1edf h\u1eefu. T\u1ed1n chi ph\u00ed h\u01a1n \u0111\u1ec3 t\u1ea1o, nh\u01b0ng c\u00f3 th\u1ec3 thay \u0111\u1ed5i.</li> </ul> <p>V\u1ec1 c\u01a1 b\u1ea3n, <code>Cow</code> cho ph\u00e9p m\u1ed9t gi\u00e1 tr\u1ecb c\u00f3 th\u1ec3 l\u00e0 vay m\u01b0\u1ee3n ho\u1eb7c s\u1edf h\u1eefu. N\u00f3 tr\u00ec ho\u00e3n vi\u1ec7c c\u1ea5p ph\u00e1t b\u1ed9 nh\u1edb v\u00e0 sao ch\u00e9p cho \u0111\u1ebfn khi th\u1ef1c s\u1ef1 c\u1ea7n thi\u1ebft (t\u1ee9c l\u00e0 khi b\u1ea1n mu\u1ed1n thay \u0111\u1ed5i d\u1eef li\u1ec7u).</p> <p>\u0110\u1ecbnh ngh\u0129a trong th\u01b0 vi\u1ec7n chu\u1ea9n c\u1ee7a Rust (\u0111\u01a1n gi\u1ea3n h\u00f3a): Rust<pre><code>pub enum Cow&lt;'a, T&gt;\nwhere\n    T: 'a + ToOwned + ?Sized,\n{\n    Borrowed(&amp;'a T),\n    Owned(&lt;T as ToOwned&gt;::Owned),\n}\n</code></pre> *   <code>T: ?Sized</code>: Cho ph\u00e9p <code>Cow</code> l\u00e0m vi\u1ec7c v\u1edbi c\u00e1c ki\u1ec3u kh\u00f4ng c\u00f3 k\u00edch th\u01b0\u1edbc c\u1ed1 \u0111\u1ecbnh nh\u01b0 <code>str</code> v\u00e0 <code>[T]</code>. *   <code>T: ToOwned</code>: Y\u00eau c\u1ea7u ki\u1ec3u <code>T</code> ph\u1ea3i bi\u1ebft c\u00e1ch t\u1ea1o ra m\u1ed9t phi\u00ean b\u1ea3n s\u1edf h\u1eefu c\u1ee7a ch\u00ednh n\u00f3 (v\u00ed d\u1ee5: <code>str</code> c\u00f3 th\u1ec3 t\u1ea1o ra <code>String</code>).</p>"},{"location":"Documents/19_smart_pointers/cow1/#3-diagram-truc-quan-cau-truc-cua-cow","title":"3. Diagram Tr\u1ef1c Quan: C\u1ea5u tr\u00fac c\u1ee7a <code>Cow</code>","text":"<p>H\u00e3y h\u00ecnh dung <code>Cow</code> nh\u01b0 m\u1ed9t chi\u1ebfc h\u1ed9p c\u00f3 th\u1ec3 ch\u1ee9a m\u1ed9t trong hai th\u1ee9:</p> Text Only<pre><code>+--------------------------------+\n|          Cow&lt;'a, str&gt;          |\n|                                |\n|  C\u00f3 th\u1ec3 l\u00e0 m\u1ed9t trong hai:       |\n|                                |\n| +----------------------------+ |\n| |      Borrowed(&amp;'a str)     | | ----&gt; Tr\u1ecf \u0111\u1ebfn m\u1ed9t chu\u1ed7i \u0111\u00e3 t\u1ed3n t\u1ea1i \u1edf \u0111\u00e2u \u0111\u00f3\n| +----------------------------+ |\n|                                |\n|              HO\u1eb6C              |\n|                                |\n| +----------------------------+ |\n| |         Owned(String)      | | ----&gt; S\u1edf h\u1eefu m\u1ed9t chu\u1ed7i ho\u00e0n to\u00e0n m\u1edbi tr\u00ean heap\n| +----------------------------+ |\n+--------------------------------+\n</code></pre>"},{"location":"Documents/19_smart_pointers/cow1/#4-vi-du-truu-tuong-ham-chuan-hoa-tin-nhan","title":"4. V\u00ed D\u1ee5 Tr\u1eebu T\u01b0\u1ee3ng: H\u00e0m \"chu\u1ea9n h\u00f3a\" tin nh\u1eafn","text":"<p>H\u00e3y vi\u1ebft m\u1ed9t h\u00e0m <code>normalize_message</code> nh\u1eadn v\u00e0o m\u1ed9t tin nh\u1eafn. N\u1ebfu tin nh\u1eafn c\u00f3 ch\u1ee9a t\u1eeb \"g\u1ea5p\", h\u00e0m s\u1ebd chuy\u1ec3n to\u00e0n b\u1ed9 tin nh\u1eafn th\u00e0nh ch\u1eef hoa. N\u1ebfu kh\u00f4ng, n\u00f3 s\u1ebd gi\u1eef nguy\u00ean.</p> <p>\u0110\u00e2y l\u00e0 k\u1ecbch b\u1ea3n ho\u00e0n h\u1ea3o cho <code>Cow</code>:</p> <ul> <li>Kh\u00f4ng c\u00f3 t\u1eeb \"g\u1ea5p\": Ch\u1ec9 c\u1ea7n \u0111\u1ecdc. D\u00f9ng <code>Borrowed</code> l\u00e0 \u0111\u1ee7. Kh\u00f4ng t\u1ed1n chi ph\u00ed.</li> <li>C\u00f3 t\u1eeb \"g\u1ea5p\": C\u1ea7n s\u1eeda \u0111\u1ed5i. Ph\u1ea3i clone \u0111\u1ec3 t\u1ea1o <code>String</code> m\u1edbi v\u00e0 chuy\u1ec3n th\u00e0nh ch\u1eef hoa. D\u00f9ng <code>Owned</code>.</li> </ul> Rust<pre><code>use std::borrow::Cow;\n\n// H\u00e0m nh\u1eadn v\u00e0o m\u1ed9t tham chi\u1ebfu v\u00e0 tr\u1ea3 v\u1ec1 m\u1ed9t Cow\n// Cow s\u1ebd l\u00e0 Borrowed n\u1ebfu kh\u00f4ng thay \u0111\u1ed5i, ho\u1eb7c Owned n\u1ebfu c\u00f3 thay \u0111\u1ed5i.\nfn normalize_message(message: &amp;str) -&gt; Cow&lt;str&gt; {\n    if message.contains(\"g\u1ea5p\") {\n        // C\u1ea7n thay \u0111\u1ed5i -&gt; Ph\u1ea3i clone v\u00e0 s\u1edf h\u1eefu d\u1eef li\u1ec7u m\u1edbi\n        println!(\"-&gt; Ph\u00e1t hi\u1ec7n t\u1eeb 'g\u1ea5p'. \u0110ang ti\u1ebfn h\u00e0nh clone v\u00e0 chuy\u1ec3n th\u00e0nh ch\u1eef hoa.\");\n        let uppercased_message = message.to_uppercase();\n        Cow::Owned(uppercased_message) // Tr\u1ea3 v\u1ec1 phi\u00ean b\u1ea3n s\u1edf h\u1eefu\n    } else {\n        // Kh\u00f4ng c\u1ea7n thay \u0111\u1ed5i -&gt; Ch\u1ec9 c\u1ea7n vay m\u01b0\u1ee3n l\u00e0 \u0111\u1ee7\n        println!(\"-&gt; Tin nh\u1eafn h\u1ee3p l\u1ec7. Kh\u00f4ng c\u1ea7n clone.\");\n        Cow::Borrowed(message) // Tr\u1ea3 v\u1ec1 phi\u00ean b\u1ea3n vay m\u01b0\u1ee3n\n    }\n}\n\nfn main() {\n    let msg1 = \"h\u1ecdp kh\u1ea9n c\u1ea5p\";\n    let msg2 = \"nh\u1edb \u0111i \u0111\u1ed5 r\u00e1c\";\n\n    println!(\"X\u1eed l\u00fd tin nh\u1eafn 1: '{}'\", msg1);\n    let normalized1 = normalize_message(msg1);\n    // normalized1 b\u00e2y gi\u1edd l\u00e0 Cow::Owned\n\n    println!(\"\\nX\u1eed l\u00fd tin nh\u1eafn 2: '{}'\", msg2);\n    let normalized2 = normalize_message(msg2);\n    // normalized2 b\u00e2y gi\u1edd l\u00e0 Cow::Borrowed\n\n    // D\u00f9 l\u00e0 Owned hay Borrowed, ta c\u00f3 th\u1ec3 d\u00f9ng ch\u00fang nh\u01b0 m\u1ed9t &amp;str b\u00ecnh th\u01b0\u1eddng\n    // nh\u1edd v\u00e0o vi\u1ec7c Cow implement trait Deref.\n    println!(\"\\nK\u1ebft qu\u1ea3 cu\u1ed1i c\u00f9ng:\");\n    println!(\"Tin nh\u1eafn 1 chu\u1ea9n h\u00f3a: {}\", normalized1);\n    println!(\"Tin nh\u1eafn 2 chu\u1ea9n h\u00f3a: {}\", normalized2);\n}\n</code></pre>"},{"location":"Documents/19_smart_pointers/cow1/#5-co-che-clone-on-write-hoat-ong-phan-tich-to_mut","title":"5. C\u01a1 Ch\u1ebf \"Clone-on-Write\" Ho\u1ea1t \u0110\u1ed9ng: Ph\u00e2n t\u00edch <code>to_mut()</code>","text":"<p>Ph\u01b0\u01a1ng th\u1ee9c quan tr\u1ecdng nh\u1ea5t th\u1ec3 hi\u1ec7n s\u1ee9c m\u1ea1nh c\u1ee7a <code>Cow</code> l\u00e0 <code>to_mut()</code>. Ph\u01b0\u01a1ng th\u1ee9c n\u00e0y tr\u1ea3 v\u1ec1 m\u1ed9t tham chi\u1ebfu c\u00f3 th\u1ec3 thay \u0111\u1ed5i (<code>&amp;mut T</code>).</p> <ul> <li>N\u1ebfu <code>Cow</code> \u0111ang \u1edf tr\u1ea1ng th\u00e1i <code>Borrowed</code>, <code>to_mut()</code> s\u1ebd clone d\u1eef li\u1ec7u, chuy\u1ec3n <code>Cow</code> sang tr\u1ea1ng th\u00e1i <code>Owned</code>, v\u00e0 tr\u1ea3 v\u1ec1 m\u1ed9t tham chi\u1ebfu c\u00f3 th\u1ec3 thay \u0111\u1ed5i \u0111\u1ebfn d\u1eef li\u1ec7u m\u1edbi n\u00e0y.</li> <li>N\u1ebfu <code>Cow</code> \u0111\u00e3 \u1edf tr\u1ea1ng th\u00e1i <code>Owned</code>, <code>to_mut()</code> ch\u1ec9 \u0111\u01a1n gi\u1ea3n l\u00e0 tr\u1ea3 v\u1ec1 m\u1ed9t tham chi\u1ebfu c\u00f3 th\u1ec3 thay \u0111\u1ed5i \u0111\u1ebfn d\u1eef li\u1ec7u hi\u1ec7n c\u00f3. Kh\u00f4ng c\u00f3 vi\u1ec7c clone n\u00e0o x\u1ea3y ra.</li> </ul>"},{"location":"Documents/19_smart_pointers/cow1/#diagram-cho-to_mut-khi-cow-la-borrowed","title":"Diagram cho <code>to_mut()</code> khi <code>Cow</code> l\u00e0 <code>Borrowed</code>","text":"<p>Gi\u1ea3 s\u1eed ch\u00fang ta c\u00f3 m\u1ed9t <code>Cow</code> \u0111ang m\u01b0\u1ee3n chu\u1ed7i <code>\"hello\"</code>.</p> <p>1. Tr\u1ea1ng th\u00e1i ban \u0111\u1ea7u: Text Only<pre><code>   D\u1eef li\u1ec7u g\u1ed1c (tr\u00ean stack ho\u1eb7c static)\n   +-----------+\n   |  \"hello\"  |\n   +-----------+\n        ^\n        |\n+---------------------+\n| cow: Cow::Borrowed(&amp;) |\n+---------------------+\n</code></pre></p> <p>2. G\u1ecdi <code>cow.to_mut()</code>: Text Only<pre><code>   D\u1eef li\u1ec7u g\u1ed1c\n   +-----------+\n   |  \"hello\"  |\n   +-----------+\n        ^\n        |\n+---------------------+      1. Clone d\u1eef li\u1ec7u g\u1ed1c\n| cow: Cow::Borrowed(&amp;) |  ---------------------&gt; T\u1ea1o ra v\u00f9ng nh\u1edb m\u1edbi tr\u00ean heap\n+---------------------+\n</code></pre></p> <p>3. Tr\u1ea1ng th\u00e1i sau khi <code>to_mut()</code> ho\u00e0n t\u1ea5t: Text Only<pre><code>   D\u1eef li\u1ec7u g\u1ed1c (v\u1eabn c\u00f2n \u0111\u00f3)      D\u1eef li\u1ec7u m\u1edbi (tr\u00ean heap)\n   +-----------+                    +-----------------+\n   |  \"hello\"  |                    |  String(\"hello\")| &lt;--+\n   +-----------+                    +-----------------+    | 4. `&amp;mut` tr\u1ecf t\u1edbi \u0111\u00e2y\n                                          ^                |\n                                          |                |\n+---------------------+      2. Chuy\u1ec3n th\u00e0nh Owned      |\n| cow: Cow::Owned(S)  | ---------------------------------+\n+---------------------+      3. `cow` b\u00e2y gi\u1edd tr\u1ecf v\u00e0o d\u1eef li\u1ec7u m\u1edbi\n</code></pre> =&gt; Chi ph\u00ed clone v\u00e0 c\u1ea5p ph\u00e1t b\u1ed9 nh\u1edb \u0111\u00e3 x\u1ea3y ra.</p>"},{"location":"Documents/19_smart_pointers/cow1/#diagram-cho-to_mut-khi-cow-la-owned","title":"Diagram cho <code>to_mut()</code> khi <code>Cow</code> l\u00e0 <code>Owned</code>","text":"<p>Gi\u1ea3 s\u1eed <code>cow</code> \u0111\u00e3 s\u1edf h\u1eefu m\u1ed9t <code>String(\"world\")</code>.</p> <p>1. Tr\u1ea1ng th\u00e1i ban \u0111\u1ea7u: Text Only<pre><code>                                  D\u1eef li\u1ec7u s\u1edf h\u1eefu (tr\u00ean heap)\n                                  +-----------------+\n                                  | String(\"world\") |\n                                  +-----------------+\n                                          ^\n                                          |\n+---------------------+\n| cow: Cow::Owned(S)  |\n+---------------------+\n</code></pre></p> <p>2. G\u1ecdi <code>cow.to_mut()</code>: Text Only<pre><code>                                  D\u1eef li\u1ec7u s\u1edf h\u1eefu (tr\u00ean heap)\n                                  +-----------------+\n                                  | String(\"world\") | &lt;--+\n                                  +-----------------+    | 2. `&amp;mut` tr\u1ecf th\u1eb3ng t\u1edbi \u0111\u00e2y\n                                          ^                |\n                                          |                |\n+---------------------+      1. Kh\u00f4ng c\u1ea7n clone!      |\n| cow: Cow::Owned(S)  | -------------------------------+\n+---------------------+\n</code></pre> =&gt; Kh\u00f4ng c\u00f3 chi ph\u00ed clone. C\u1ef1c k\u1ef3 hi\u1ec7u qu\u1ea3.</p>"},{"location":"Documents/19_smart_pointers/cow1/#6-code-hoan-chinh-su-dung-to_mut","title":"6. Code Ho\u00e0n Ch\u1ec9nh: S\u1eed d\u1ee5ng <code>to_mut</code>","text":"<p>\u0110\u00e2y l\u00e0 m\u1ed9t v\u00ed d\u1ee5 kh\u00e1c s\u1eed d\u1ee5ng <code>to_mut</code> \u0111\u1ec3 s\u1eeda \u0111\u1ed5i t\u1ea1i ch\u1ed7.</p> <p>Rust<pre><code>use std::borrow::Cow;\n\nfn ensure_uppercased_ending&lt;'a&gt;(text: &amp;'a str) -&gt; Cow&lt;'a, str&gt; {\n    let mut cow = Cow::from(text); // B\u1eaft \u0111\u1ea7u v\u1edbi Cow::Borrowed\n\n    if !text.ends_with(\"!!!\") {\n        println!(\"-&gt; V\u0103n b\u1ea3n c\u1ea7n s\u1eeda \u0111\u1ed5i.\");\n        // \u0110\u00e2y l\u00e0 l\u00fac ph\u00e9p m\u00e0u x\u1ea3y ra!\n        // V\u00ec cow \u0111ang l\u00e0 Borrowed, to_mut() s\u1ebd clone v\u00e0 chuy\u1ec3n n\u00f3 th\u00e0nh Owned.\n        cow.to_mut().push_str(\"!!!\");\n    } else {\n        println!(\"-&gt; V\u0103n b\u1ea3n \u0111\u00e3 ho\u00e0n h\u1ea3o.\");\n        // Kh\u00f4ng g\u1ecdi to_mut(), cow v\u1eabn l\u00e0 Borrowed.\n    }\n\n    cow\n}\n\nfn main() {\n    let s1 = \"S\u1ef1 ki\u1ec7n quan tr\u1ecdng\";\n    println!(\"X\u1eed l\u00fd: '{}'\", s1);\n    let res1 = ensure_uppercased_ending(s1);\n    // res1 l\u00e0 Cow::Owned v\u00ec \u0111\u00e3 b\u1ecb thay \u0111\u1ed5i\n\n    println!(\"\\n------------------------\\n\");\n\n    let s2 = \"S\u1ef1 ki\u1ec7n quan tr\u1ecdng!!!\";\n    println!(\"X\u1eed l\u00fd: '{}'\", s2);\n    let res2 = ensure_uppercased_ending(s2);\n    // res2 l\u00e0 Cow::Borrowed v\u00ec kh\u00f4ng b\u1ecb thay \u0111\u1ed5i\n\n    println!(\"\\nK\u1ebft qu\u1ea3 cu\u1ed1i c\u00f9ng:\");\n    println!(\"res1 ({:?}): {}\", res1, res1);\n    println!(\"res2 ({:?}): {}\", res2, res2);\n\n    // Ki\u1ec3m tra xem res2 c\u00f3 th\u1ef1c s\u1ef1 m\u01b0\u1ee3n t\u1eeb s2 kh\u00f4ng\n    // So s\u00e1nh \u0111\u1ecba ch\u1ec9 con tr\u1ecf\n    assert_eq!(res2.as_ptr(), s2.as_ptr(), \"res2 ph\u1ea3i m\u01b0\u1ee3n t\u1eeb s2\");\n    println!(\"\\nKi\u1ec3m tra th\u00e0nh c\u00f4ng: res2 th\u1ef1c s\u1ef1 ch\u1ec9 l\u00e0 m\u1ed9t tham chi\u1ebfu \u0111\u1ebfn d\u1eef li\u1ec7u g\u1ed1c!\");\n}\n</code></pre> Output c\u1ee7a ch\u01b0\u01a1ng tr\u00ecnh tr\u00ean s\u1ebd cho th\u1ea5y r\u00f5 khi n\u00e0o vi\u1ec7c clone x\u1ea3y ra v\u00e0 khi n\u00e0o kh\u00f4ng.</p>"},{"location":"Documents/19_smart_pointers/cow1/#7-loi-ich-va-han-che","title":"7. L\u1ee3i \u00cdch v\u00e0 H\u1ea1n Ch\u1ebf","text":""},{"location":"Documents/19_smart_pointers/cow1/#loi-ich","title":"L\u1ee3i \u00cdch","text":"<ol> <li>T\u1ed1i \u01b0u hi\u1ec7u n\u0103ng: Tr\u00e1nh \u0111\u01b0\u1ee3c vi\u1ec7c c\u1ea5p ph\u00e1t b\u1ed9 nh\u1edb v\u00e0 clone kh\u00f4ng c\u1ea7n thi\u1ebft, \u0111\u1eb7c bi\u1ec7t h\u1eefu \u00edch khi x\u1eed l\u00fd l\u01b0\u1ee3ng l\u1edbn d\u1eef li\u1ec7u m\u00e0 ph\u1ea7n l\u1edbn kh\u00f4ng c\u1ea7n s\u1eeda \u0111\u1ed5i.</li> <li>API linh ho\u1ea1t: Cho ph\u00e9p vi\u1ebft c\u00e1c h\u00e0m c\u00f3 th\u1ec3 ch\u1ea5p nh\u1eadn c\u1ea3 d\u1eef li\u1ec7u vay m\u01b0\u1ee3n v\u00e0 s\u1edf h\u1eefu, l\u00e0m cho th\u01b0 vi\u1ec7n c\u1ee7a b\u1ea1n d\u1ec5 s\u1eed d\u1ee5ng h\u01a1n.</li> </ol>"},{"location":"Documents/19_smart_pointers/cow1/#han-che","title":"H\u1ea1n Ch\u1ebf","text":"<ol> <li>Ph\u1ee9c t\u1ea1p h\u01a1n: Logic c\u1ee7a <code>Cow</code> c\u00f3 th\u1ec3 l\u00e0m code kh\u00f3 \u0111\u1ecdc h\u01a1n m\u1ed9t ch\u00fat so v\u1edbi vi\u1ec7c ch\u1ec9 d\u00f9ng <code>&amp;str</code> ho\u1eb7c <code>String</code>.</li> <li>Overhead nh\u1ecf: C\u00f3 m\u1ed9t chi ph\u00ed nh\u1ecf khi ch\u1ea1y \u0111\u1ec3 ki\u1ec3m tra xem <code>Cow</code> l\u00e0 <code>Borrowed</code> hay <code>Owned</code>. Tuy nhi\u00ean, chi ph\u00ed n\u00e0y g\u1ea7n nh\u01b0 kh\u00f4ng \u0111\u00e1ng k\u1ec3 so v\u1edbi chi ph\u00ed c\u1ea5p ph\u00e1t b\u1ed9 nh\u1edb.</li> </ol>"},{"location":"Documents/19_smart_pointers/cow1/#8-tong-ket","title":"8. T\u1ed5ng K\u1ebft","text":"<p><code>Cow</code> l\u00e0 m\u1ed9t c\u00f4ng c\u1ee5 t\u1ed1i \u01b0u h\u00f3a m\u1ea1nh m\u1ebd v\u00e0 thanh l\u1ecbch trong Rust. N\u00f3 l\u00e0 c\u00e2y c\u1ea7u n\u1ed1i gi\u1eefa th\u1ebf gi\u1edbi \"vay m\u01b0\u1ee3n\" hi\u1ec7u qu\u1ea3 v\u00e0 th\u1ebf gi\u1edbi \"s\u1edf h\u1eefu\" linh ho\u1ea1t.</p> <p>H\u00e3y s\u1eed d\u1ee5ng <code>Cow</code> khi:</p> <ul> <li>B\u1ea1n \u0111ang vi\u1ebft m\u1ed9t h\u00e0m ho\u1eb7c API.</li> <li>H\u00e0m \u0111\u00f3 nh\u1eadn d\u1eef li\u1ec7u \u0111\u1ea7u v\u00e0o.</li> <li>H\u00e0m \u0111\u00f3 c\u00f3 th\u1ec3 c\u1ea7n ph\u1ea3i s\u1eeda \u0111\u1ed5i d\u1eef li\u1ec7u \u0111\u00f3, nh\u01b0ng trong nhi\u1ec1u tr\u01b0\u1eddng h\u1ee3p th\u00ec kh\u00f4ng.</li> </ul> <p>B\u1eb1ng c\u00e1ch s\u1eed d\u1ee5ng <code>Cow</code>, b\u1ea1n trao cho Rust kh\u1ea3 n\u0103ng \u0111\u01b0a ra l\u1ef1a ch\u1ecdn hi\u1ec7u qu\u1ea3 nh\u1ea5t t\u1ea1i th\u1eddi \u0111i\u1ec3m ch\u1ea1y: ch\u1ec9 clone khi th\u1ef1c s\u1ef1 c\u1ea7n thi\u1ebft.</p>"},{"location":"Documents/19_smart_pointers/cow1/#phu-luc","title":"Ph\u1ee5 l\u1ee5c","text":"<p>D\u01b0\u1edbi \u0111\u00e2y l\u00e0 b\u1ea3ng t\u00f3m t\u1eaft c\u00e1c quy t\u1eafc ho\u1ea1t \u0111\u1ed9ng c\u1ee7a <code>Cow&lt;'a, T&gt;</code>.</p>"},{"location":"Documents/19_smart_pointers/cow1/#bang-tom-tat-quy-tac-hoat-ong-cua-cow","title":"B\u1ea3ng T\u00f3m T\u1eaft Quy T\u1eafc Ho\u1ea1t \u0110\u1ed9ng C\u1ee7a <code>Cow</code>","text":"T\u00ecnh Hu\u1ed1ng Ban \u0110\u1ea7u (C\u00e1ch <code>Cow</code> \u0111\u01b0\u1ee3c t\u1ea1o) H\u00e0nh \u0110\u1ed9ng Ti\u1ebfp Theo Tr\u1ea1ng Th\u00e1i Cu\u1ed1i C\u00f9ng c\u1ee7a <code>Cow</code> Hi\u1ec7u Su\u1ea5t / \u0110i\u1ec1u G\u00ec X\u1ea3y Ra? T\u1ea1o t\u1eeb tham chi\u1ebfu<code>Cow::from(&amp;data)</code> Kh\u00f4ng s\u1eeda \u0111\u1ed5i(Ch\u1ec9 \u0111\u1ecdc) <code>Cow::Borrowed</code> Kh\u00f4ng clone, kh\u00f4ng c\u1ea5p ph\u00e1t b\u1ed9 nh\u1edb. Si\u00eau hi\u1ec7u qu\u1ea3. <code>Cow</code> ch\u1ec9 l\u00e0 m\u1ed9t con tr\u1ecf. T\u1ea1o t\u1eeb tham chi\u1ebfu<code>Cow::from(&amp;data)</code> C\u1ea7n s\u1eeda \u0111\u1ed5i(G\u1ecdi <code>to_mut()</code>) <code>Cow::Owned</code> Clone d\u1eef li\u1ec7u g\u1ed1c, c\u1ea5p ph\u00e1t b\u1ed9 nh\u1edb m\u1edbi. <code>Cow</code> chuy\u1ec3n t\u1eeb m\u01b0\u1ee3n sang s\u1edf h\u1eefu. T\u1ea1o t\u1eeb gi\u00e1 tr\u1ecb s\u1edf h\u1eefu<code>Cow::from(data)</code> Kh\u00f4ng s\u1eeda \u0111\u1ed5i(Ch\u1ec9 \u0111\u1ecdc) <code>Cow::Owned</code> Kh\u00f4ng clone th\u00eam. D\u1eef li\u1ec7u \u0111\u00e3 \u0111\u01b0\u1ee3c s\u1edf h\u1eefu t\u1eeb \u0111\u1ea7u. T\u1ea1o t\u1eeb gi\u00e1 tr\u1ecb s\u1edf h\u1eefu<code>Cow::from(data)</code> C\u1ea7n s\u1eeda \u0111\u1ed5i(G\u1ecdi <code>to_mut()</code>) <code>Cow::Owned</code> Kh\u00f4ng clone. S\u1eeda \u0111\u1ed5i tr\u1ef1c ti\u1ebfp tr\u00ean d\u1eef li\u1ec7u \u0111ang s\u1edf h\u1eefu. <p>B\u1ea3ng n\u00e0y t\u00f3m g\u1ecdn nguy\u00ean t\u1eafc \"Clone-on-Write\": <code>Cow</code> ch\u1ec9 th\u1ef1c hi\u1ec7n vi\u1ec7c clone v\u00e0 c\u1ea5p ph\u00e1t b\u1ed9 nh\u1edb trong duy nh\u1ea5t m\u1ed9t tr\u01b0\u1eddng h\u1ee3p\u2014khi b\u1ea1n c\u1ea7n s\u1eeda \u0111\u1ed5i m\u1ed9t d\u1eef li\u1ec7u m\u00e0 ban \u0111\u1ea7u n\u00f3 ch\u1ec9 \u0111ang vay m\u01b0\u1ee3n. Trong t\u1ea5t c\u1ea3 c\u00e1c tr\u01b0\u1eddng h\u1ee3p kh\u00e1c, n\u00f3 \u0111\u1ec1u tr\u00e1nh \u0111\u01b0\u1ee3c chi ph\u00ed n\u00e0y.</p>"},{"location":"Documents/rust_book_17_4_streams/streams/","title":"Streams trong Rust v\u00e0 c\u00e1ch s\u1eed d\u1ee5ng.","text":""},{"location":"Documents/rust_book_17_4_streams/streams/#ma-chuong-trinh-vi-du","title":"M\u00e3 ch\u01b0\u01a1ng tr\u00ecnh v\u00ed d\u1ee5:","text":"<p>Example code:</p> Rust<pre><code>use std::{pin::pin, time::Duration};\nuse trpl::{ReceiverStream, Stream, StreamExt};\n\nfn get_messages() -&gt; impl Stream&lt;Item = String&gt; {\n    let (tx, rx) = trpl::channel();\n\n    trpl::spawn_task(async move {\n        let messages = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\"];\n        for (index, message) in messages.into_iter().enumerate() {\n            let time_to_sleep = if index % 2 == 0 { 100 } else { 300 };\n            trpl::sleep(Duration::from_millis(time_to_sleep)).await;\n            if let Err(send_error) = tx.send(format!(\"Message: '{message}'\")) {\n                eprintln!(\"Cannot send message '{message}': {send_error}\");\n                break;\n            };\n        }\n    });\n\n    ReceiverStream::new(rx)\n}\n\nfn get_intervals() -&gt; impl Stream&lt;Item = u32&gt; {\n    let (tx, rx) = trpl::channel();\n\n    trpl::spawn_task(async move {\n        let mut count = 0;\n        loop {\n            trpl::sleep(Duration::from_millis(1)).await;\n            count += 1;\n            if let Err(send_error) = tx.send(count) {\n                eprintln!(\"Could not send interval {count}: {send_error}\");\n                break;\n            };\n        }\n    });\n\n    ReceiverStream::new(rx)\n}\n\nfn main() {\n    trpl::run(async {\n        println!(\"==========block1===========\");\n        let values = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n        let iter = values.iter().map(|n| n * 2);\n        let stream = trpl::stream_from_iter(iter);\n\n        let mut filtered = stream.filter(|value| value % 3 == 0 || value % 5 == 0);\n\n        while let Some(value) = filtered.next().await {\n            println!(\"The value was: {value}\");\n        }\n    });\n\n    trpl::run(async {\n        println!(\"==========block2===========\");\n        let mut messages = get_messages();\n\n        while let Some(message) = messages.next().await {\n            println!(\"{message}\");\n        }\n    });\n\n    trpl::run(async {\n        println!(\"==========block3===========\");\n        let mut messages = pin!(get_messages().timeout(Duration::from_millis(200)));\n\n        while let Some(result) = messages.next().await {\n            match result {\n                Ok(message) =&gt; println!(\"{message}\"),\n                Err(reason) =&gt; eprintln!(\"Problem: {reason:?}\"),\n            }\n        }\n    });\n\n    trpl::run(async {\n        println!(\"==========block4===========\");\n        let messages = get_messages().timeout(Duration::from_millis(200));\n        let intervals = get_intervals()\n            .map(|count| format!(\"Interval: {count}\"))\n            .throttle(Duration::from_millis(100))\n            .timeout(Duration::from_secs(10));\n        let merged = messages.merge(intervals).take(20);\n        let mut stream = pin!(merged);\n        while let Some(result) = stream.next().await {\n            match result {\n                Ok(message) =&gt; println!(\"{message}\"),\n                Err(reason) =&gt; eprintln!(\"Problem: {reason}\"),\n            }\n        }\n    });\n}\n</code></pre> <p>Ph\u1ea7n 1: L\u1ecdc Stream</p> <p>Bash<pre><code>   The value was: 6\n   The value was: 10\n   The value was: 12\n   The value was: 18\n   The value was: 20\n</code></pre>    * Ph\u00e2n t\u00edch: \u0110\u00e2y l\u00e0 k\u1ebft qu\u1ea3 c\u1ee7a kh\u1ed1i \u0111\u1ea7u ti\u00ean. Ch\u01b0\u01a1ng tr\u00ecnh t\u1ea1o m\u1ed9t lu\u1ed3ng t\u1eeb [1..10], nh\u00e2n m\u1ed7i s\u1ed1 v\u1edbi 2,      sau \u0111\u00f3 ch\u1ec9 gi\u1eef l\u1ea1i nh\u1eefng s\u1ed1 chia h\u1ebft cho 3 ho\u1eb7c 5. K\u1ebft qu\u1ea3 ho\u00e0n to\u00e0n ch\u00ednh x\u00e1c.</p> <p>Ph\u1ea7n 2: Nh\u1eadn Message \u0111\u01a1n gi\u1ea3n</p> Text Only<pre><code>Message: 'a'\nMessage: 'b'\n...\nMessage: 'j'\n</code></pre> <ul> <li>Ph\u00e2n t\u00edch: Kh\u1ed1i th\u1ee9 hai ch\u1ec9 \u0111\u01a1n gi\u1ea3n l\u00e0 nh\u1eadn v\u00e0 in ra t\u1ea5t c\u1ea3 c\u00e1c tin nh\u1eafn t\u1eeb h\u00e0m get_messages. 10 tin      nh\u1eafn \u0111\u00e3 \u0111\u01b0\u1ee3c in ra \u0111\u1ea7y \u0111\u1ee7. Ho\u1ea1t \u0111\u1ed9ng \u0111\u00fang.</li> </ul> <p>Ph\u1ea7n 3: Stream v\u1edbi Timeout (d\u00f9ng Debug {:?}) Text Only<pre><code>Message: 'a'\nProblem: Elapsed(())\nMessage: 'c'\nProblem: Elapsed(())\nMessage: 'e'\n...\n</code></pre></p> <ul> <li>Ph\u00e2n t\u00edch: Kh\u1ed1i th\u1ee9 ba th\u00eam m\u1ed9t timeout(200ms).<ul> <li>C\u00e1c tin nh\u1eafn \u1edf v\u1ecb tr\u00ed ch\u1eb5n ('a', 'c', 'e'...) \u0111\u01b0\u1ee3c g\u1eedi sau 100ms, \u0111\u1ebfn k\u1ecbp tr\u01b0\u1edbc timeout, n\u00ean \u0111\u01b0\u1ee3c      in ra.</li> <li>C\u00e1c tin nh\u1eafn \u1edf v\u1ecb tr\u00ed l\u1ebb ('b', 'd', 'f'...) \u0111\u01b0\u1ee3c g\u1eedi sau 300ms, \u0111\u1ebfn tr\u1ec5 v\u00e0 g\u00e2y ra l\u1ed7i timeout.</li> <li>L\u1ed7i \u0111\u01b0\u1ee3c in ra l\u00e0 Problem: Elapsed(()). \u0110\u00e2y l\u00e0 k\u1ebft qu\u1ea3 c\u1ee7a vi\u1ec7c d\u00f9ng {:?} (\u0111\u1ecbnh d\u1ea1ng Debug) \u0111\u1ec3 in      l\u1ed7i. Ho\u1ea1t \u0111\u1ed9ng \u0111\u00fang nh\u01b0 mong \u0111\u1ee3i.</li> </ul> </li> </ul> <p>Ph\u1ea7n 4: G\u1ed9p (Merge) Stream (d\u00f9ng Display {})</p> Text Only<pre><code>Interval: 1\nMessage: 'a'\nInterval: 2\nInterval: 3\nProblem: deadline has elapsed\nInterval: 4\nMessage: 'b'\n...\n</code></pre> <ul> <li>Ph\u00e2n t\u00edch: \u0110\u00e2y l\u00e0 kh\u1ed1i ph\u1ee9c t\u1ea1p nh\u1ea5t, g\u1ed9p hai lu\u1ed3ng l\u1ea1i v\u1edbi nhau v\u00e0 l\u1ea5y 20 gi\u00e1 tr\u1ecb \u0111\u1ea7u ti\u00ean (take(20)).<ul> <li>B\u1ea1n c\u00f3 th\u1ec3 th\u1ea5y c\u00e1c d\u00f2ng Interval: v\u00e0 Message: \u0111\u01b0\u1ee3c in ra xen k\u1ebd. \u0110i\u1ec1u n\u00e0y cho th\u1ea5y h\u00e0m merge \u0111ang      ho\u1ea1t \u0111\u1ed9ng, n\u00f3 nh\u1eadn gi\u00e1 tr\u1ecb t\u1eeb b\u1ea5t k\u1ef3 lu\u1ed3ng n\u00e0o c\u00f3 gi\u00e1 tr\u1ecb \u0111\u1ebfn tr\u01b0\u1edbc.</li> <li>C\u00e1c d\u00f2ng Problem: deadline has elapsed c\u0169ng xu\u1ea5t hi\u1ec7n. \u0110\u00e2y l\u00e0 l\u1ed7i timeout t\u1eeb lu\u1ed3ng messages.</li> <li>Quan tr\u1ecdng l\u00e0, d\u00f2ng l\u1ed7i n\u00e0y ch\u00ednh l\u00e0 k\u1ebft qu\u1ea3 c\u1ee7a vi\u1ec7c d\u00f9ng {} (\u0111\u1ecbnh d\u1ea1ng Display) \u0111\u1ec3 in l\u1ed7i. N\u00f3 cho       ra m\u1ed9t chu\u1ed7i k\u00fd t\u1ef1 kh\u00e1c v\u1edbi Elapsed(()) \u1edf ph\u1ea7n 3, \u0111\u00fang nh\u01b0 b\u1ea1n \u0111\u00e3 nh\u1eadn x\u00e9t.</li> <li>To\u00e0n b\u1ed9 kh\u1ed1i n\u00e0y d\u1eebng l\u1ea1i sau khi in ra 20 d\u00f2ng, ch\u00ednh x\u00e1c nh\u01b0 take(20) \u0111\u00e3 ch\u1ec9 \u0111\u1ecbnh.</li> </ul> </li> </ul> <p>T\u1ed5ng k\u1ebft: Ch\u01b0\u01a1ng tr\u00ecnh c\u1ee7a b\u1ea1n \u0111ang ch\u1ea1y ho\u00e0n h\u1ea3o v\u00e0 k\u1ebft qu\u1ea3 stdout \u0111\u00e3 minh h\u1ecda r\u1ea5t r\u00f5 r\u00e0ng c\u00e1c kh\u00e1i   ni\u1ec7m v\u1ec1 x\u1eed l\u00fd stream: l\u1ecdc (filter), timeout, g\u1ed9p (merge), v\u00e0 gi\u1edbi h\u1ea1n (take). Ph\u00e2n t\u00edch n\u00e0y c\u0169ng l\u00e0m r\u00f5   s\u1ef1 kh\u00e1c bi\u1ec7t gi\u1eefa vi\u1ec7c in l\u1ed7i b\u1eb1ng Debug ({:?}) v\u00e0 Display ({}).</p>"},{"location":"Documents/rust_book_17_4_streams/streams/#ly-thuyet-nen-tang","title":"L\u00fd thuy\u1ebft n\u1ec1n t\u1ea3ng:","text":"<ol> <li>N\u1ec1n t\u1ea3ng: X\u1eed l\u00fd c\u00f4ng vi\u1ec7c m\u1ed9t c\u00e1ch linh ho\u1ea1t</li> </ol> <p>H\u00e3y t\u01b0\u1edfng t\u01b0\u1ee3ng m\u1ed9t ng\u01b0\u1eddi \u0111\u1ea7u b\u1ebfp c\u00f3 th\u1ec3 b\u1eaft \u0111\u1ea7u h\u1ea7m m\u1ed9t n\u1ed3i s\u00fap (m\u1ed9t vi\u1ec7c t\u1ed1n nhi\u1ec1u th\u1eddi gian), v\u00e0 thay    v\u00ec \u0111\u1ee9ng ch\u1edd, anh ta c\u00f3 th\u1ec3 quay sang th\u00e1i rau ho\u1eb7c chu\u1ea9n b\u1ecb m\u1ed9t m\u00f3n kh\u00e1c. Anh ta ch\u1ec9 quay l\u1ea1i v\u1edbi n\u1ed3i   s\u00fap khi n\u00f3 th\u1ef1c s\u1ef1 c\u1ea7n s\u1ef1 ch\u00fa \u00fd.</p> <p>\u0110\u00e2y l\u00e0 nguy\u00ean t\u1eafc c\u01a1 b\u1ea3n nh\u1ea5t: h\u1ec7 th\u1ed1ng c\u00f3 kh\u1ea3 n\u0103ng th\u1ef1c hi\u1ec7n nhi\u1ec1u c\u00f4ng vi\u1ec7c \u0111\u1ed3ng th\u1eddi v\u00e0 x\u1eed l\u00fd c\u00e1c t\u00e1c    v\u1ee5 m\u1ed9t c\u00e1ch hi\u1ec7u qu\u1ea3 m\u00e0 kh\u00f4ng b\u1ecb \"\u0111\u1ee9ng h\u00ecnh\" ch\u1edd \u0111\u1ee3i.</p> <ol> <li>\u00dd t\u01b0\u1edfng c\u1ed1t l\u00f5i: D\u00f2ng ch\u1ea3y th\u00f4ng tin</li> </ol> <p>Thay v\u00ec xem d\u1eef li\u1ec7u nh\u01b0 m\u1ed9t \"h\u1ed3 n\u01b0\u1edbc\" t\u0129nh (m\u1ed9t danh s\u00e1ch c\u00f3 s\u1eb5n t\u1ea5t c\u1ea3 m\u1ecdi th\u1ee9), h\u00e3y h\u00ecnh dung n\u00f3 nh\u01b0   m\u1ed9t \"d\u00f2ng s\u00f4ng\" \u0111ang ch\u1ea3y. Th\u00f4ng tin ho\u1eb7c c\u00e1c s\u1ef1 ki\u1ec7n xu\u1ea5t hi\u1ec7n l\u1ea7n l\u01b0\u1ee3t theo th\u1eddi gian, v\u00e0 ch\u00fang ta   kh\u00f4ng bi\u1ebft tr\u01b0\u1edbc t\u1ea5t c\u1ea3 ch\u00fang l\u00e0 g\u00ec.</p> <ol> <li>C\u00e1c thao t\u00e1c tr\u00ean d\u00f2ng ch\u1ea3y</li> </ol> <p>M\u1ed9t khi \u0111\u00e3 c\u00f3 d\u00f2ng ch\u1ea3y, ch\u00fang ta c\u00f3 th\u1ec3 t\u00e1c \u0111\u1ed9ng l\u00ean n\u00f3 theo nhi\u1ec1u c\u00e1ch:</p> <ul> <li>Bi\u1ebfn \u0111\u1ed5i: Ch\u00fang ta c\u00f3 th\u1ec3 \u0111\u1eb7t m\u1ed9t \"nh\u00e0 m\u00e1y\" tr\u00ean s\u00f4ng \u0111\u1ec3 bi\u1ebfn \u0111\u1ed5i m\u1ecdi th\u1ee9 ch\u1ea3y qua n\u00f3. V\u00ed d\u1ee5, bi\u1ebfn      nh\u1eefng kh\u00fac g\u1ed7 th\u00e0nh nh\u1eefng qu\u1ea3 b\u00f3ng g\u1ed7.</li> <li>S\u00e0ng l\u1ecdc: Ch\u00fang ta c\u00f3 th\u1ec3 \u0111\u1eb7t m\u1ed9t \"c\u00e1i l\u01b0\u1edbi\" ch\u1ec9 cho ph\u00e9p nh\u1eefng th\u1ee9 c\u00f3 \u0111\u1eb7c \u0111i\u1ec3m nh\u1ea5t \u0111\u1ecbnh (v\u00ed d\u1ee5, ch\u1ec9      nh\u1eefng con c\u00e1 m\u00e0u xanh) \u0111i qua v\u00e0 ch\u1eb7n nh\u1eefng th\u1ee9 kh\u00e1c l\u1ea1i.</li> <li> <p>\u0110i\u1ec1u ti\u1ebft: Ch\u00fang ta c\u00f3 th\u1ec3 x\u00e2y m\u1ed9t \"con \u0111\u1eadp\" \u0111\u1ec3 ki\u1ec3m so\u00e1t t\u1ed1c \u0111\u1ed9 c\u1ee7a d\u00f2ng ch\u1ea3y, \u0111\u1ea3m b\u1ea3o n\u00f3 kh\u00f4ng \u0111\u1ebfn      qu\u00e1 nhanh g\u00e2y qu\u00e1 t\u1ea3i cho h\u1ec7 th\u1ed1ng x\u1eed l\u00fd ph\u00eda sau.</p> </li> <li> <p>Qu\u1ea3n l\u00fd y\u1ebfu t\u1ed1 th\u1eddi gian</p> </li> </ul> <p>D\u00f2ng ch\u1ea3y trong th\u1ef1c t\u1ebf kh\u00f4ng ph\u1ea3i l\u00fac n\u00e0o c\u0169ng \u1ed5n \u0111\u1ecbnh.</p> <ul> <li> <p>\u0110\u1eb7t ra gi\u1edbi h\u1ea1n th\u1eddi gian: Ch\u00fang ta c\u00f3 th\u1ec3 \u0111\u1eb7t ra quy t\u1eafc: \"T\u00f4i ch\u1ec9 ch\u1edd m\u1ed9t m\u00f3n \u0111\u1ed3 trong d\u00f2ng ch\u1ea3y      trong m\u1ed9t kho\u1ea3ng th\u1eddi gian nh\u1ea5t \u0111\u1ecbnh\". N\u1ebfu n\u00f3 kh\u00f4ng \u0111\u1ebfn k\u1ecbp, ta xem nh\u01b0 c\u00f3 \"s\u1ef1 c\u1ed1\" v\u00e0 h\u00e0nh \u0111\u1ed9ng t\u01b0\u01a1ng      \u1ee9ng (v\u00ed d\u1ee5: b\u1ecf qua v\u00e0 x\u1eed l\u00fd vi\u1ec7c kh\u00e1c) thay v\u00ec ch\u1edd \u0111\u1ee3i m\u00e3i m\u00e3i.</p> </li> <li> <p>Ph\u1ed1i h\u1ee3p nhi\u1ec1u d\u00f2ng ch\u1ea3y</p> </li> </ul> <p>H\u1ec7 th\u1ed1ng c\u00f3 th\u1ec3 x\u1eed l\u00fd nhi\u1ec1u d\u00f2ng ch\u1ea3y c\u00f9ng l\u00fac.</p> <ul> <li>H\u1ee3p nh\u1ea5t: T\u01b0\u1edfng t\u01b0\u1ee3ng c\u00f3 hai d\u00f2ng s\u00f4ng ri\u00eang bi\u1ec7t. Ch\u00fang ta c\u00f3 th\u1ec3 \u0111\u00e0o m\u1ed9t con k\u00eanh \u0111\u1ec3 h\u1ee3p nh\u1ea5t ch\u00fang      l\u1ea1i th\u00e0nh m\u1ed9t d\u00f2ng s\u00f4ng l\u1edbn h\u01a1n. D\u00f2ng s\u00f4ng m\u1edbi n\u00e0y s\u1ebd ch\u1ee9a t\u1ea5t c\u1ea3 nh\u1eefng g\u00ec \u0111\u1ebfn t\u1eeb hai d\u00f2ng s\u00f4ng ban      \u0111\u1ea7u, theo th\u1ee9 t\u1ef1 th\u1eddi gian m\u00e0 ch\u00fang \u0111\u1ebfn.</li> <li>Gi\u1edbi h\u1ea1n s\u1ed1 l\u01b0\u1ee3ng: T\u1eeb m\u1ed9t d\u00f2ng ch\u1ea3y l\u1edbn, ch\u00fang ta c\u00f3 th\u1ec3 quy\u1ebft \u0111\u1ecbnh r\u1eb1ng m\u00ecnh ch\u1ec9 c\u1ea7n l\u1ea5y m\u1ed9t s\u1ed1 l\u01b0\u1ee3ng      v\u1eadt ph\u1ea9m nh\u1ea5t \u0111\u1ecbnh (v\u00ed d\u1ee5: 20 m\u00f3n \u0111\u1ea7u ti\u00ean) v\u00e0 s\u1ebd kh\u00f4ng quan t\u00e2m \u0111\u1ebfn ph\u1ea7n c\u00f2n l\u1ea1i.</li> </ul> <p>T\u00f3m l\u1ea1i, to\u00e0n b\u1ed9 b\u00e0i h\u1ecdc n\u00e0y m\u00f4 t\u1ea3 m\u1ed9t h\u1ec7 th\u1ed1ng \u0111\u1ec3:</p> <p>X\u00e2y d\u1ef1ng c\u00e1c quy tr\u00ecnh x\u1eed l\u00fd th\u00f4ng tin d\u01b0\u1edbi d\u1ea1ng c\u00e1c d\u00f2ng ch\u1ea3y n\u0103ng \u0111\u1ed9ng. H\u1ec7 th\u1ed1ng n\u00e0y cho ph\u00e9p bi\u1ebfn   \u0111\u1ed5i, ch\u1ecdn l\u1ecdc, v\u00e0 \u0111i\u1ec1u ti\u1ebft c\u00e1c d\u00f2ng ch\u1ea3y \u0111\u00f3; x\u1eed l\u00fd c\u00e1c s\u1ef1 c\u1ed1 v\u1ec1 m\u1eb7t th\u1eddi gian m\u1ed9t c\u00e1ch th\u00f4ng minh; v\u00e0   c\u00f3 kh\u1ea3 n\u0103ng ph\u1ed1i h\u1ee3p, h\u1ee3p nh\u1ea5t nhi\u1ec1u d\u00f2ng ch\u1ea3y t\u1eeb c\u00e1c ngu\u1ed3n kh\u00e1c nhau th\u00e0nh m\u1ed9t quy tr\u00ecnh th\u1ed1ng nh\u1ea5t,   t\u1ea5t c\u1ea3 di\u1ec5n ra m\u1ed9t c\u00e1ch \u0111\u1ed3ng th\u1eddi v\u00e0 hi\u1ec7u qu\u1ea3.</p> <p>Diagram:</p> <pre><code>graph TD\n    subgraph \"Ngu\u1ed3n 1: Ng\u01b0\u1eddi T\u1ea1o Tin Nh\u1eafn (Ch\u1ea1y ng\u1ea7m)\"\n        direction LR\n        A1[&lt;B&gt;Task:&lt;/B&gt;&lt;br/&gt;V\u00f2ng l\u1eb7p t\u1ea1o&lt;br/&gt;'a', 'b', 'c'...] --&gt;|G\u1eedi v\u00e0o k\u00eanh 1| B1((K\u00eanh 1))\n    end\n\n    subgraph \"Ngu\u1ed3n 2: Ng\u01b0\u1eddi T\u1ea1o Nh\u1ecbp \u0110\u1ebfm (Ch\u1ea1y ng\u1ea7m)\"\n        direction LR\n        A2[&lt;B&gt;Task:&lt;/B&gt;&lt;br/&gt;V\u00f2ng l\u1eb7p \u0111\u1ebfm&lt;br/&gt;1, 2, 3...] --&gt;|G\u1eedi v\u00e0o k\u00eanh 2| B2((K\u00eanh 2))\n    end\n\n    B1 --&gt; C1{\"D\u00f2ng ch\u1ea3y Tin Nh\u1eafn\"}\n    B2 --&gt; C2{\"D\u00f2ng ch\u1ea3y Nh\u1ecbp \u0110\u1ebfm\"}\n\n    subgraph \"\u0110\u01b0\u1eddng \u1ed1ng x\u1eed l\u00fd Tin Nh\u1eafn\"\n        C1 --&gt; D1[\"&lt;B&gt;\u0110\u1eb7t Gi\u1edbi H\u1ea1n Th\u1eddi Gian&lt;/B&gt;&lt;br/&gt;(Timeout 200ms)\"]\n    end\n\n    subgraph \"\u0110\u01b0\u1eddng \u1ed1ng x\u1eed l\u00fd Nh\u1ecbp \u0110\u1ebfm\"\n        C2 --&gt; D2[\"&lt;B&gt;Bi\u1ebfn \u0110\u1ed5i&lt;/B&gt;&lt;br/&gt;(S\u1ed1 th\u00e0nh ch\u1eef)\"] --&gt; E2[\"&lt;B&gt;\u0110i\u1ec1u Ti\u1ebft T\u1ed1c \u0110\u1ed9&lt;/B&gt;&lt;br/&gt;(Throttle 100ms)\"] --&gt; F2[\"&lt;B&gt;\u0110\u1eb7t Gi\u1edbi H\u1ea1n Th\u1eddi Gian&lt;/B&gt;&lt;br/&gt;(Timeout 10s)\"]\n    end\n\n    %% \u26a0\ufe0f D\u00f2ng tr\u1ed1ng gi\u00fap parser kh\u00f4ng n\u1ed1i li\u1ec1n c\u00e1c node\n    D1 --&gt; G{\"&lt;B&gt;H\u1ee2P NH\u1ea4T&lt;/B&gt;&lt;br/&gt;(Merge)\"}\n\n    F2 --&gt; G\n\n    G --&gt; H[\"&lt;B&gt;Gi\u1edbi H\u1ea1n S\u1ed1 L\u01b0\u1ee3ng&lt;/B&gt;&lt;br/&gt;(Ch\u1ec9 l\u1ea5y 20 m\u00f3n \u0111\u1ea7u ti\u00ean)\"]\n\n    H --&gt; I([&lt;B&gt;Ng\u01b0\u1eddi Ti\u00eau D\u00f9ng Cu\u1ed1i C\u00f9ng&lt;/B&gt;&lt;br/&gt;V\u00f2ng l\u1eb7p in k\u1ebft qu\u1ea3 ra m\u00e0n h\u00ecnh])\n\n    %% Styling\n    style A1 fill:#f9f,stroke:#333,stroke-width:2px\n    style A2 fill:#f9f,stroke:#333,stroke-width:2px\n    style G fill:#ffc,stroke:#333,stroke-width:4px\n    style I fill:#9af9,stroke:#333,stroke-width:2px\n</code></pre>"},{"location":"Documents/rust_book_17_4_streams/streams/#merge-hop-nhat-hoat-ong-cac-luong-stream","title":"<code>merge</code> (h\u1ee3p nh\u1ea5t) ho\u1ea1t \u0111\u1ed9ng c\u00e1c lu\u1ed3ng <code>stream</code>.","text":"<p>H\u00e3y t\u01b0\u1edfng t\u01b0\u1ee3ng merge nh\u01b0 m\u1ed9t nh\u00e2n vi\u00ean tr\u1ef1c t\u1ed5ng \u0111\u00e0i \u0111ang theo d\u00f5i hai \u0111\u01b0\u1eddng d\u00e2y \u0111i\u1ec7n tho\u1ea1i c\u00f9ng m\u1ed9t   l\u00fac:    * \u0110\u01b0\u1eddng d\u00e2y 1: Lu\u1ed3ng messages.    * \u0110\u01b0\u1eddng d\u00e2y 2: Lu\u1ed3ng intervals.</p> <p>Lu\u1ed3ng \u0111\u01b0\u1ee3c h\u1ee3p nh\u1ea5t (<code>merged</code>) l\u00e0 chu\u1ed7i c\u00e1c cu\u1ed9c g\u1ecdi m\u00e0 nh\u00e2n vi\u00ean n\u00e0y x\u1eed l\u00fd.</p>"},{"location":"Documents/rust_book_17_4_streams/streams/#1-luon-lang-nghe-ca-hai-nguon-cung-luc","title":"1. Lu\u00f4n l\u1eafng nghe c\u1ea3 hai ngu\u1ed3n c\u00f9ng l\u00fac","text":"<p>Nh\u00e2n vi\u00ean tr\u1ef1c t\u1ed5ng \u0111\u00e0i kh\u00f4ng bao gi\u1edd ch\u1ec9 nghe m\u1ed9t \u0111\u01b0\u1eddng d\u00e2y v\u00e0 b\u1ecf m\u1eb7c \u0111\u01b0\u1eddng d\u00e2y kia. Anh ta \u0111\u1eb7t c\u1ea3 hai   \u1ed1ng nghe l\u00ean tai v\u00e0 l\u1eafng nghe \u0111\u1ed3ng th\u1eddi. B\u1ea5t k\u1ef3 \u0111\u01b0\u1eddng d\u00e2y n\u00e0o c\u00f3 t\u00edn hi\u1ec7u \u0111\u1ebfn tr\u01b0\u1edbc (item \u0111\u01b0\u1ee3c t\u1ea1o ra),   anh ta s\u1ebd x\u1eed l\u00fd ngay l\u1eadp-t\u1ee9c.</p> <p>\u0110\u00e2y l\u00e0 b\u1ea3n ch\u1ea5t c\u1ee7a merge: n\u00f3 \"ch\u1ea1y \u0111ua\" (races) hai lu\u1ed3ng ngu\u1ed3n v\u1edbi nhau trong c\u00f9ng m\u1ed9t th\u1eddi \u0111i\u1ec3m.</p>"},{"location":"Documents/rust_book_17_4_streams/streams/#2-ai-en-truoc-phuc-vu-truoc-first-come-first-served","title":"2. \"Ai \u0111\u1ebfn tr\u01b0\u1edbc, ph\u1ee5c v\u1ee5 tr\u01b0\u1edbc\" (First-Come, First-Served)","text":"<p>Th\u1ee9 t\u1ef1 c\u00e1c gi\u00e1 tr\u1ecb trong lu\u1ed3ng merged kh\u00f4ng \u0111\u01b0\u1ee3c s\u1eafp x\u1ebfp xen k\u1ebd (m\u1ed9t t\u1eeb <code>messages</code>, m\u1ed9t t\u1eeb <code>intervals</code>, r\u1ed3i   l\u1ea1i m\u1ed9t t\u1eeb <code>messages</code>...). Thay v\u00e0o \u0111\u00f3, th\u1ee9 t\u1ef1 \u0111\u01b0\u1ee3c quy\u1ebft \u0111\u1ecbnh ho\u00e0n to\u00e0n b\u1edfi th\u1eddi gian.</p> <p>H\u00e3y xem l\u1ea1i k\u1ebft qu\u1ea3 c\u1ee7a b\u1ea1n:</p> Bash<pre><code>Interval: 1   (Lu\u1ed3ng intervals nhanh h\u01a1n)\nMessage: 'a'  (Lu\u1ed3ng messages \u0111\u1ebfn k\u1ecbp ngay sau \u0111\u00f3)\nInterval: 2   (Lu\u1ed3ng intervals l\u1ea1i nhanh h\u01a1n)\nInterval: 3   (L\u1ea1i l\u00e0 intervals, v\u00ec n\u00f3 \u0111\u1ec1u \u0111\u1eb7n 100ms)\nProblem: ...  (L\u1ed7i timeout t\u1eeb lu\u1ed3ng messages)\n</code></pre> <p>\u0110i\u1ec1u n\u00e0y cho th\u1ea5y <code>intervals</code> c\u00f3 v\u1ebb t\u1ea1o ra gi\u00e1 tr\u1ecb r\u1ea5t nhanh v\u00e0 \u0111\u1ec1u \u0111\u1eb7n, trong khi messages c\u00f3 t\u1ed1c \u0111\u1ed9 th\u1ea5t   th\u01b0\u1eddng h\u01a1n (l\u00fac 100ms, l\u00fac 300ms n\u00ean b\u1ecb timeout). Lu\u1ed3ng merged ch\u1ec9 \u0111\u01a1n gi\u1ea3n l\u00e0 thu th\u1eadp v\u00e0 chuy\u1ec3n ti\u1ebfp b\u1ea5t c\u1ee9 th\u1ee9 g\u00ec \u0111\u1ebfn tai n\u00f3 tr\u01b0\u1edbc.</p>"},{"location":"Documents/rust_book_17_4_streams/streams/#3-cung-loai-du-lieu","title":"3. C\u00f9ng lo\u1ea1i d\u1eef li\u1ec7u","text":"<p>M\u1ed9t quy t\u1eafc quan tr\u1ecdng: \u0111\u1ec3 h\u1ee3p nh\u1ea5t, c\u1ea3 hai lu\u1ed3ng ngu\u1ed3n ph\u1ea3i t\u1ea1o ra c\u00f9ng m\u1ed9t \"ki\u1ec3u\" d\u1eef li\u1ec7u. Trong m\u00e3   c\u1ee7a b\u1ea1n, c\u1ea3 hai lu\u1ed3ng sau khi bi\u1ebfn \u0111\u1ed5i \u0111\u1ec1u t\u1ea1o ra <code>Result&lt;String, ...&gt;</code> (m\u1ed9t chu\u1ed7i k\u00fd t\u1ef1 ho\u1eb7c m\u1ed9t l\u1ed7i). V\u00ec    ch\u00fang c\u00f9ng ki\u1ec3u, merge c\u00f3 th\u1ec3 ho\u1ea1t \u0111\u1ed9ng. B\u1ea1n kh\u00f4ng th\u1ec3 h\u1ee3p nh\u1ea5t m\u1ed9t lu\u1ed3ng s\u1ed1 nguy\u00ean v\u1edbi m\u1ed9t lu\u1ed3ng chu\u1ed7i    k\u00fd t\u1ef1 m\u1ed9t c\u00e1ch tr\u1ef1c ti\u1ebfp.</p>"},{"location":"Documents/rust_book_17_4_streams/streams/#4-khi-nao-thi-ket-thuc","title":"4. Khi n\u00e0o th\u00ec k\u1ebft th\u00fac?","text":"<p>B\u00ecnh th\u01b0\u1eddng, lu\u1ed3ng merged ch\u1ec9 k\u1ebft th\u00fac khi c\u1ea3 hai lu\u1ed3ng ngu\u1ed3n (messages v\u00e0 intervals) \u0111\u1ec1u \u0111\u00e3 k\u1ebft th\u00fac.   Tuy nhi\u00ean, trong m\u00e3 c\u1ee7a b\u1ea1n c\u00f3 th\u00eam <code>.take(20)</code>, n\u00f3 gi\u1ed1ng nh\u01b0 m\u1ed9t ch\u1ec9 th\u1ecb cho nh\u00e2n vi\u00ean t\u1ed5ng \u0111\u00e0i: \"Sau khi anh x\u1eed l\u00fd \u0111\u1ee7 20 cu\u1ed9c g\u1ecdi (b\u1ea5t k\u1ec3 t\u1eeb \u0111\u01b0\u1eddng d\u00e2y n\u00e0o), h\u00e3y d\u1eebng c\u00f4ng vi\u1ec7c v\u00e0 g\u00e1c m\u00e1y\".</p> <p>M\u1ee5c \u0111\u00edch v\u00e0 \u1ee9ng d\u1ee5ng</p> <p>T\u00f3m l\u1ea1i, merge l\u00e0 c\u00f4ng c\u1ee5 \u0111\u1ec3 t\u1ed5ng h\u1ee3p c\u00e1c s\u1ef1 ki\u1ec7n t\u1eeb nhi\u1ec1u ngu\u1ed3n kh\u00f4ng \u0111\u1ed3ng b\u1ed9 v\u00e0o m\u1ed9t k\u00eanh x\u1eed l\u00fd duy   nh\u1ea5t. N\u00f3 c\u1ef1c k\u1ef3 h\u1eefu \u00edch trong c\u00e1c \u1ee9ng d\u1ee5ng th\u1ef1c t\u1ebf, v\u00ed d\u1ee5:</p> <ul> <li>Trong m\u1ed9t giao di\u1ec7n ng\u01b0\u1eddi d\u00f9ng, b\u1ea1n c\u00f3 th\u1ec3 h\u1ee3p nh\u1ea5t m\u1ed9t lu\u1ed3ng c\u00e1c c\u00fa nh\u1ea5p chu\u1ed9t c\u1ee7a ng\u01b0\u1eddi d\u00f9ng v\u1edbi m\u1ed9t      lu\u1ed3ng d\u1eef li\u1ec7u \u0111\u1ebfn t\u1eeb m\u00e1y ch\u1ee7.</li> <li>Trong m\u1ed9t h\u1ec7 th\u1ed1ng giao d\u1ecbch, b\u1ea1n c\u00f3 th\u1ec3 h\u1ee3p nh\u1ea5t c\u00e1c c\u1eadp nh\u1eadt gi\u00e1 t\u1eeb nhi\u1ec1u s\u00e0n giao d\u1ecbch kh\u00e1c nhau v\u00e0o       m\u1ed9t lu\u1ed3ng \u0111\u1ec3 ph\u00e2n t\u00edch.</li> </ul> <p>N\u00f3 cho ph\u00e9p b\u1ea1n ph\u1ea3n \u1ee9ng v\u1edbi c\u00e1c s\u1ef1 ki\u1ec7n ngay khi ch\u00fang x\u1ea3y ra, b\u1ea5t k\u1ec3 ch\u00fang \u0111\u1ebfn t\u1eeb \u0111\u00e2u.</p>"},{"location":"Documents/rust_book_17_4_streams/streams/#spawn_task-trong-ma-la-gi","title":"<code>spawn_task</code> trong m\u00e3 l\u00e0 g\u00ec?","text":"<p><code>spawn_task</code> l\u00e0 m\u1ed9t kh\u00e1i ni\u1ec7m c\u1ef1c k\u1ef3 quan tr\u1ecdng trong l\u1eadp tr\u00ecnh kh\u00f4ng \u0111\u1ed3ng b\u1ed9, v\u00e0 n\u00f3 \u0111\u00f3ng vai tr\u00f2 trung t\u00e2m trong vi\u1ec7c t\u1ea1o ra c\u00e1c \"d\u00f2ng ch\u1ea3y\" trong m\u00e3 c\u1ee7a b\u1ea1n.</p> <p>H\u00e3y xem x\u00e9t n\u00f3 m\u1ed9t c\u00e1ch chi ti\u1ebft.</p> <p><code>spawn_task</code> l\u00e0 g\u00ec?</p> <p>N\u00f3i m\u1ed9t c\u00e1ch \u0111\u01a1n gi\u1ea3n, <code>spawn_task</code> c\u00f3 ngh\u0129a l\u00e0: \"H\u00e3y b\u1eaft \u0111\u1ea7u c\u00f4ng vi\u1ec7c n\u00e0y, nh\u01b0ng \u0111\u1eebng ch\u1edd n\u00f3 ho\u00e0n th\u00e0nh.    H\u00e3y \u0111\u1ec3 n\u00f3 ch\u1ea1y ng\u1ea7m trong khi ch\u00fang ta ti\u1ebfp t\u1ee5c l\u00e0m vi\u1ec7c kh\u00e1c.\"</p> <p>N\u00f3 gi\u1ed1ng nh\u01b0 b\u1ea1n giao vi\u1ec7c cho m\u1ed9t nh\u00e2n vi\u00ean. B\u1ea1n kh\u00f4ng \u0111\u1ee9ng k\u00e8 k\u00e8 b\u00ean c\u1ea1nh xem h\u1ecd l\u00e0m, m\u00e0 b\u1ea1n tin t\u01b0\u1edfng    h\u1ecd s\u1ebd t\u1ef1 ho\u00e0n th\u00e0nh c\u00f4ng vi\u1ec7c \u0111\u00f3. Trong khi h\u1ecd l\u00e0m, b\u1ea1n c\u00f3 th\u1ec3 \u0111i gi\u1ea3i quy\u1ebft c\u00e1c v\u1ea5n-\u0111\u1ec1 kh\u00e1c.</p> <p>Vai tr\u00f2 trong m\u00e3 c\u1ee7a b\u1ea1n: T\u1ea1o ra \"Ng\u01b0\u1eddi s\u1ea3n xu\u1ea5t\"</p> <p>Trong c\u1ea3 hai h\u00e0m <code>get_messages</code> v\u00e0 <code>get_intervals</code>, <code>spawn_task</code> \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 t\u1ea1o ra m\u1ed9t \"Ng\u01b0\u1eddi s\u1ea3n-xu\u1ea5t\"   (Producer) ch\u1ea1y \u1edf ch\u1ebf \u0111\u1ed9 n\u1ec1n.</p> <p>H\u00e3y ph\u00e2n t\u00edch quy tr\u00ecnh trong h\u00e0m <code>get_messages</code>:</p> <ol> <li> <p>T\u1ea1o k\u00eanh li\u00ean l\u1ea1c:       <code>let (tx, rx) = trpl::channel();</code>       \u0110\u1ea7u ti\u00ean, m\u1ed9t \"k\u00eanh li\u00ean l\u1ea1c\" \u0111\u01b0\u1ee3c t\u1ea1o ra. K\u00eanh n\u00e0y c\u00f3 2 \u0111\u1ea7u:</p> <ul> <li>tx (Transmitter): \u0110\u1ea7u \u0111\u1ec3 g\u1eedi d\u1eef li\u1ec7u \u0111i.</li> <li>rx (Receiver): \u0110\u1ea7u \u0111\u1ec3 nh\u1eadn d\u1eef li\u1ec7u \u0111\u1ebfn.</li> </ul> </li> <li> <p>Giao nhi\u1ec7m v\u1ee5 ch\u1ea1y ng\u1ea7m:       <code>trpl::spawn_task(async move { ... });</code>       \u0110\u00e2y ch\u00ednh l\u00e0 l\u00fac b\u1ea1n \"giao vi\u1ec7c\". B\u1ea1n n\u00f3i v\u1edbi h\u1ec7 th\u1ed1ng: \"H\u00e3y l\u1ea5y kh\u1ed1i c\u00f4ng vi\u1ec7c async n\u00e0y v\u00e0 ch\u1ea1y n\u00f3    tr\u00ean m\u1ed9t lu\u1ed3ng ri\u00eang. Kh\u1ed1i c\u00f4ng vi\u1ec7c n\u00e0y s\u1ebd gi\u1eef \u0111\u1ea7u g\u1eedi <code>tx</code>.\"</p> </li> <li> <p>C\u00f4ng vi\u1ec7c c\u1ee7a \"Ng\u01b0\u1eddi s\u1ea3n xu\u1ea5t\":       B\u00ean trong kh\u1ed1i <code>async</code>, c\u00f3 m\u1ed9t v\u00f2ng l\u1eb7p li\u00ean t\u1ee5c t\u1ea1o ra c\u00e1c tin nh\u1eafn v\u00e0 g\u1eedi ch\u00fang v\u00e0o k\u00eanh th\u00f4ng qua   <code>tx.send(...)</code>. Nhi\u1ec7m v\u1ee5 n\u00e0y ch\u1ea1y ho\u00e0n to\u00e0n \u0111\u1ed9c l\u1eadp. N\u00f3 kh\u00f4ng bi\u1ebft ai \u0111ang nh\u1eadn tin, n\u00f3 ch\u1ec9 bi\u1ebft g\u1eedi tin   v\u00e0o k\u00eanh.</p> </li> <li> <p>Tr\u1ea3 v\u1ec1 \"Ng\u01b0\u1eddi ti\u00eau d\u00f9ng\":       <code>ReceiverStream::new(rx)</code>       Trong khi nhi\u1ec7m v\u1ee5 ch\u1ea1y ng\u1ea7m \u0111ang b\u1eadn r\u1ed9n s\u1ea3n xu\u1ea5t tin nh\u1eafn, h\u00e0m <code>get_messages</code> ngay l\u1eadp t\u1ee9c tr\u1ea3 v\u1ec1   \u0111\u1ea7u nh\u1eadn rx (\u0111\u01b0\u1ee3c g\u00f3i l\u1ea1i th\u00e0nh m\u1ed9t Stream). B\u1ea5t k\u1ef3 ai g\u1ecdi h\u00e0m <code>get_messages</code> s\u1ebd nh\u1eadn \u0111\u01b0\u1ee3c \"thu\u00ea bao\" n\u00e0y   \u0111\u1ec3 b\u1eaft \u0111\u1ea7u l\u1eafng nghe tin nh\u1eafn.</p> </li> </ol> <p>T\u1ea1i sao ph\u1ea3i l\u00e0m v\u1eady?</p> <p>\u0110\u00e2y l\u00e0 c\u00e2u h\u1ecfi quan tr\u1ecdng nh\u1ea5t. T\u1ea1i sao kh\u00f4ng \u0111\u1eb7t v\u00f2ng l\u1eb7p t\u1ea1o tin nh\u1eafn tr\u1ef1c ti\u1ebfp trong h\u00e0m <code>get_messages</code>?</p> <p>N\u1ebfu b\u1ea1n l\u00e0m v\u1eady, h\u00e0m get_messages s\u1ebd ph\u1ea3i ch\u1ea1y h\u1ebft to\u00e0n b\u1ed9 v\u00f2ng l\u1eb7p, t\u1ea1o ra t\u1ea5t c\u1ea3 c\u00e1c tin nh\u1eafn, l\u01b0u ch\u00fang   v\u00e0o m\u1ed9t danh s\u00e1ch, r\u1ed3i m\u1edbi tr\u1ea3 v\u1ec1 danh s\u00e1ch \u0111\u00f3. \u0110i\u1ec1u n\u00e0y c\u00f3 hai v\u1ea5n \u0111\u1ec1 l\u1edbn:</p> <ol> <li>L\u00e0m block ch\u01b0\u01a1ng tr\u00ecnh: H\u00e0m s\u1ebd b\u1ecb \"k\u1eb9t\" l\u1ea1i cho \u0111\u1ebfn khi t\u1ea1o xong tin nh\u1eafn cu\u1ed1i c\u00f9ng.</li> <li>Ph\u00e1 v\u1ee1 \u00fd t\u01b0\u1edfng \"d\u00f2ng ch\u1ea3y\": B\u1ea1n s\u1ebd nh\u1eadn \u0111\u01b0\u1ee3c m\u1ed9t h\u1ed3 n\u01b0\u1edbc (t\u1ea5t c\u1ea3 d\u1eef li\u1ec7u c\u00f9ng l\u00fac), ch\u1ee9 kh\u00f4ng ph\u1ea3i m\u1ed9t       d\u00f2ng s\u00f4ng (d\u1eef li\u1ec7u \u0111\u1ebfn t\u1eeb t\u1eeb theo th\u1eddi gian).</li> </ol> <p>B\u1eb1ng c\u00e1ch s\u1eed d\u1ee5ng spawn_task, b\u1ea1n cho ph\u00e9p vi\u1ec7c s\u1ea3n xu\u1ea5t d\u1eef li\u1ec7u (ch\u1ea1y ng\u1ea7m) v\u00e0 vi\u1ec7c ti\u00eau th\u1ee5 d\u1eef li\u1ec7u   (v\u00f2ng l\u1eb7p while let trong main) di\u1ec5n ra song song v\u00e0 \u0111\u1ed9c l\u1eadp. Ch\u00fang ch\u1ec9 giao ti\u1ebfp v\u1edbi nhau qua m\u1ed9t k\u00eanh.    \u0110i\u1ec1u n\u00e0y t\u1ea1o ra m\u1ed9t d\u00f2ng ch\u1ea3y d\u1eef li\u1ec7u th\u1ef1c s\u1ef1, hi\u1ec7u qu\u1ea3 v\u00e0 kh\u00f4ng g\u00e2y t\u1eafc ngh\u1ebdn.</p>"},{"location":"Documents/rust_book_17_4_streams/streams/#giai-thich-ky-hon-ve-impl-stream-va-receiverstream","title":"Gi\u1ea3i th\u00edch k\u1ef9 h\u01a1n v\u1ec1 impl Stream v\u00e0 ReceiverStream <p>\u2726 Ch\u1eafc ch\u1eafn r\u1ed3i. \u0110\u00e2y l\u00e0 hai kh\u00e1i ni\u1ec7m c\u00f3 li\u00ean quan m\u1eadt thi\u1ebft, m\u1ed9t c\u00e1i l\u00e0 tr\u1eebu t\u01b0\u1ee3ng (c\u00e1i giao di\u1ec7n), m\u1ed9t c\u00e1i    l\u00e0 c\u1ee5 th\u1ec3 (c\u00e1i th\u1ef1c thi).</p> <p>H\u00e3y ph\u00e2n t\u00edch t\u1eebng c\u00e1i m\u1ed9t.</p> <ol> <li><code>impl Stream&lt;Item = T&gt;</code>: L\u1eddi h\u1ee9a v\u1ec1 m\u1ed9t \"D\u00f2ng ch\u1ea3y\"</li> </ol> <p>Khi b\u1ea1n th\u1ea5y <code>impl Stream&lt;...&gt;</code> \u1edf v\u1ecb tr\u00ed tr\u1ea3 v\u1ec1 c\u1ee7a m\u1ed9t h\u00e0m, h\u00e3y \u0111\u1ecdc n\u00f3 nh\u01b0 m\u1ed9t \"l\u1eddi h\u1ee9a\".</p> <p><code>fn get_messages() -&gt; impl Stream&lt;Item = String&gt;</code></p> <p>L\u1eddi h\u1ee9a n\u00e0y c\u00f3 ngh\u0129a l\u00e0:</p>  <p>\"T\u00f4i, h\u00e0m get_messages, h\u1ee9a s\u1ebd tr\u1ea3 v\u1ec1 cho b\u1ea1n m\u1ed9t th\u1ee9 g\u00ec \u0111\u00f3. T\u00f4i kh\u00f4ng n\u00f3i ch\u00ednh x\u00e1c n\u00f3 l\u00e0 ki\u1ec3u d\u1eef   li\u1ec7u g\u00ec, nh\u01b0ng t\u00f4i \u0111\u1ea3m b\u1ea3o n\u00f3 s\u1ebd ho\u1ea1t \u0111\u1ed9ng gi\u1ed1ng h\u1ec7t nh\u01b0 m\u1ed9t Stream (d\u00f2ng ch\u1ea3y), v\u00e0 c\u00e1c ph\u1ea7n t\u1eed trong   d\u00f2ng ch\u1ea3y \u0111\u00f3 s\u1ebd l\u00e0 ki\u1ec3u String.\"</p>  <p>T\u1ea1i sao l\u1ea1i c\u1ea7n l\u1eddi h\u1ee9a n\u00e0y?</p> <ol> <li> <p>Che gi\u1ea5u s\u1ef1 ph\u1ee9c t\u1ea1p: Khi b\u1ea1n g\u1ecdi nhi\u1ec1u ph\u01b0\u01a1ng th\u1ee9c x\u1eed l\u00fd stream n\u1ed1i ti\u1ebfp nhau       <code>(.map().filter().take()...)</code>, ki\u1ec3u d\u1eef li\u1ec7u th\u1ef1c t\u1ebf \u1edf cu\u1ed1i c\u00f9ng s\u1ebd tr\u1edf n\u00ean c\u1ef1c k\u1ef3 d\u00e0i v\u00e0 ph\u1ee9c t\u1ea1p (v\u00ed d\u1ee5:        <code>Take&lt;Filter&lt;Map&lt;...&gt;&gt;&gt;)</code>. D\u00f9ng <code>impl Stream</code> gi\u00fap b\u1ea1n gi\u1eef cho t\u00ean h\u00e0m \u0111\u01b0\u1ee3c g\u1ecdn g\u00e0ng, ch\u1ec9 c\u1ea7n n\u00f3i ra h\u00e0nh       vi (\"\u0111\u00e2y l\u00e0 m\u1ed9t d\u00f2ng ch\u1ea3y\") thay v\u00ec c\u1ea5u tr\u00fac c\u1ee5 th\u1ec3 c\u1ee7a n\u00f3.</p> </li> <li> <p>T\u0103ng t\u00ednh linh ho\u1ea1t: Ng\u01b0\u1eddi vi\u1ebft h\u00e0m get_messages c\u00f3 th\u1ec3 thay \u0111\u1ed5i ho\u00e0n to\u00e0n c\u00e1ch h\u1ecd t\u1ea1o ra stream \u1edf b\u00ean       trong. Mi\u1ec5n l\u00e0 th\u1ee9 cu\u1ed1i c\u00f9ng h\u1ecd tr\u1ea3 v\u1ec1 v\u1eabn gi\u1eef \u0111\u00fang l\u1eddi h\u1ee9a (v\u1eabn l\u00e0 m\u1ed9t Stream ch\u1ee9a String), th\u00ec code \u1edf        b\u00ean ngo\u00e0i (trong h\u00e0m main) s\u1ebd kh\u00f4ng b\u1ecb \u1ea3nh h\u01b0\u1edfng v\u00e0 kh\u00f4ng c\u1ea7n thay \u0111\u1ed5i g\u00ec c\u1ea3.</p> </li> </ol> <p>T\u00f3m l\u1ea1i: <code>impl Stream&lt;T&gt;</code> l\u00e0 m\u1ed9t c\u00e1ch n\u00f3i tr\u1eebu t\u01b0\u1ee3ng, t\u1eadp trung v\u00e0o ch\u1ee9c n\u0103ng (\"b\u1ea1n c\u00f3 th\u1ec3 l\u00e0m g\u00ec v\u1edbi   n\u00f3?\") thay v\u00ec chi ti\u1ebft k\u1ef9 thu\u1eadt (\"n\u00f3 \u0111\u01b0\u1ee3c l\u00e0m t\u1eeb g\u00ec?\").</p>  <ol> <li><code>ReceiverStream&lt;T&gt;</code>: M\u1ed9t lo\u1ea1i \"D\u00f2ng ch\u1ea3y\" c\u1ee5 th\u1ec3</li> </ol> <p>N\u1ebfu impl Stream l\u00e0 m\u1ed9t l\u1eddi h\u1ee9a, th\u00ec <code>ReceiverStream</code> l\u00e0 m\u1ed9t trong nh\u1eefng c\u00e1ch \u0111\u1ec3 th\u1ef1c hi\u1ec7n l\u1eddi h\u1ee9a \u0111\u00f3.</p> <p>\u0110\u00e2y l\u00e0 m\u1ed9t ki\u1ec3u d\u1eef li\u1ec7u c\u1ee5 th\u1ec3 (struct). T\u00ean c\u1ee7a n\u00f3 \u0111\u00e3 m\u00f4 t\u1ea3 ch\u00ednh x\u00e1c ch\u1ee9c n\u0103ng c\u1ee7a n\u00f3: \"M\u1ed9t <code>Stream</code>   \u0111\u01b0\u1ee3c t\u1ea1o ra t\u1eeb m\u1ed9t <code>Receiver</code> (\u0111\u1ea7u nh\u1eadn c\u1ee7a k\u00eanh).\"</p> <p>Vai tr\u00f2: B\u1ed9 chuy\u1ec3n \u0111\u1ed5i (Adapter)</p> <p>Nhi\u1ec7m v\u1ee5 ch\u00ednh c\u1ee7a <code>ReceiverStream</code> l\u00e0 l\u00e0m m\u1ed9t c\u00e2y c\u1ea7u n\u1ed1i, m\u1ed9t b\u1ed9 chuy\u1ec3n \u0111\u1ed5i. N\u00f3 bi\u1ebfn m\u1ed9t \u0111\u1ea7u nh\u1eadn rx c\u1ee7a    k\u00eanh li\u00ean l\u1ea1c (v\u1ed1n ch\u1ec9 l\u00e0 m\u1ed9t c\u00e1i \u1ed1ng \u0111\u1ec3 ch\u1edd d\u1eef li\u1ec7u) th\u00e0nh m\u1ed9t Stream \u0111\u00fang ngh\u0129a, th\u1ee9 m\u00e0 b\u1ea1n c\u00f3 th\u1ec3 x\u1eed    l\u00fd, bi\u1ebfn \u0111\u1ed5i, h\u1ee3p nh\u1ea5t...</p> <p>C\u00e1ch ho\u1ea1t \u0111\u1ed9ng (v\u1ec1 m\u1eb7t \u00fd t\u01b0\u1edfng):</p> <ol> <li>ReceiverStream \"b\u1ecdc\" l\u1ea5y \u0111\u1ea7u nh\u1eadn rx.</li> <li>Khi b\u1ea1n g\u1ecdi <code>.next().await</code> tr\u00ean <code>ReceiverStream</code>, n\u00f3 s\u1ebd th\u1ef1c hi\u1ec7n thao t\u00e1c <code>rx.recv().await</code> \u1edf b\u00ean trong.       T\u1ee9c l\u00e0 n\u00f3 s\u1ebd ch\u1edd cho \u0111\u1ebfn khi c\u00f3 d\u1eef li\u1ec7u \u0111\u01b0\u1ee3c g\u1eedi \u0111\u1ebfn \u0111\u1ea7u rx c\u1ee7a k\u00eanh.</li> <li>Khi nh\u1eadn \u0111\u01b0\u1ee3c d\u1eef li\u1ec7u, n\u00f3 s\u1ebd tr\u1ea3 ra cho b\u1ea1n.</li> </ol> <p>M\u1ed1i li\u00ean h\u1ec7 gi\u1eefa hai kh\u00e1i ni\u1ec7m</p> <p>B\u00e2y gi\u1edd h\u00e3y k\u1ebft n\u1ed1i ch\u00fang l\u1ea1i trong h\u00e0m get_messages:</p> Rust<pre><code>   fn get_messages() -&gt; impl Stream&lt;Item = String&gt; { // L\u1eddi h\u1ee9a\n        let (tx, rx) = trpl::channel();\n\n        trpl::spawn_task(async move {\n            // ... g\u1eedi d\u1eef li\u1ec7u v\u00e0o tx ...\n        });\n\n        ReceiverStream::new(rx) // C\u00e1ch th\u1ef1c hi\u1ec7n l\u1eddi h\u1ee9a c\u1ee5 th\u1ec3\n    }\n</code></pre> <ol> <li>B\u00ean trong h\u00e0m, m\u1ed9t <code>ReceiverStream</code> c\u1ee5 th\u1ec3 \u0111\u01b0\u1ee3c t\u1ea1o ra.</li> <li>Khi tr\u1ea3 v\u1ec1, Rust th\u1ea5y r\u1eb1ng <code>ReceiverStream</code> \u0111\u00fang l\u00e0 m\u1ed9t lo\u1ea1i <code>Stream</code>, n\u00ean l\u1eddi h\u1ee9a <code>impl Stream</code> \u0111\u01b0\u1ee3c th\u1ecfa       m\u00e3n.</li> <li>H\u00e0m main khi nh\u1eadn \u0111\u01b0\u1ee3c k\u1ebft qu\u1ea3, n\u00f3 kh\u00f4ng c\u1ea7n bi\u1ebft \u0111\u00f3 l\u00e0 ReceiverStream. N\u00f3 ch\u1ec9 bi\u1ebft r\u1eb1ng \u0111\u00f3 l\u00e0 m\u1ed9t <code>impl        Stream</code> v\u00e0 n\u00f3 c\u00f3 th\u1ec3 g\u1ecdi <code>.next().await</code> tr\u00ean \u0111\u00f3.</li> </ol> <p>\u0110\u00e2y l\u00e0 m\u1ed9t nguy\u00ean t\u1eafc thi\u1ebft k\u1ebf ph\u1ea7n m\u1ec1m r\u1ea5t m\u1ea1nh m\u1ebd: \"L\u1eadp tr\u00ecnh d\u1ef1a tr\u00ean giao di\u1ec7n (h\u00e0nh vi), kh\u00f4ng ph\u1ea3i d\u1ef1a tr\u00ean th\u1ef1c thi c\u1ee5 th\u1ec3.\"</p>","text":""}]}